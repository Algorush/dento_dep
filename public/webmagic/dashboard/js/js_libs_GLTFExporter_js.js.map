{"version":3,"file":"js_libs_GLTFExporter_js.js","mappings":"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","sources":["webpack:///./js/libs/GLTFExporter.js"],"sourcesContent":["const {\r\n\tBufferAttribute,\r\n\tClampToEdgeWrapping,\r\n\tDoubleSide,\r\n\tInterpolateDiscrete,\r\n\tInterpolateLinear,\r\n\tLinearEncoding,\r\n\tLinearFilter,\r\n\tLinearMipmapLinearFilter,\r\n\tLinearMipmapNearestFilter,\r\n\tMathUtils,\r\n\tMatrix4,\r\n\tMirroredRepeatWrapping,\r\n\tNearestFilter,\r\n\tNearestMipmapLinearFilter,\r\n\tNearestMipmapNearestFilter,\r\n\tPropertyBinding,\r\n\tRGBAFormat,\r\n\tRepeatWrapping,\r\n\tScene,\r\n\tSource,\r\n\tsRGBEncoding,\r\n\tVector3\r\n} = require ('three');\r\n\r\nclass GLTFExporter {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.pluginCallbacks = [];\r\n\r\n\t\tthis.register( function ( writer ) {\r\n\r\n\t\t\treturn new GLTFLightExtension( writer );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.register( function ( writer ) {\r\n\r\n\t\t\treturn new GLTFMaterialsUnlitExtension( writer );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.register( function ( writer ) {\r\n\r\n\t\t\treturn new GLTFMaterialsTransmissionExtension( writer );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.register( function ( writer ) {\r\n\r\n\t\t\treturn new GLTFMaterialsVolumeExtension( writer );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.register( function ( writer ) {\r\n\r\n\t\t\treturn new GLTFMaterialsClearcoatExtension( writer );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.register( function ( writer ) {\r\n\r\n\t\t\treturn new GLTFMaterialsIridescenceExtension( writer );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tregister( callback ) {\r\n\r\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\r\n\r\n\t\t\tthis.pluginCallbacks.push( callback );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunregister( callback ) {\r\n\r\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\r\n\r\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Parse scenes and generate GLTF output\r\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\r\n\t * @param  {Function} onDone  Callback on completed\r\n\t * @param  {Function} onError  Callback on errors\r\n\t * @param  {Object} options options\r\n\t */\r\n\tparse( input, onDone, onError, options ) {\r\n\r\n\t\tconst writer = new GLTFWriter();\r\n\t\tconst plugins = [];\r\n\r\n\t\tfor ( let i = 0, il = this.pluginCallbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\tplugins.push( this.pluginCallbacks[ i ]( writer ) );\r\n\r\n\t\t}\r\n\r\n\t\twriter.setPlugins( plugins );\r\n\t\twriter.write( input, onDone, options ).catch( onError );\r\n\r\n\t}\r\n\r\n\tparseAsync( input, options ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tscope.parse( input, resolve, reject, options );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nconst WEBGL_CONSTANTS = {\r\n\tPOINTS: 0x0000,\r\n\tLINES: 0x0001,\r\n\tLINE_LOOP: 0x0002,\r\n\tLINE_STRIP: 0x0003,\r\n\tTRIANGLES: 0x0004,\r\n\tTRIANGLE_STRIP: 0x0005,\r\n\tTRIANGLE_FAN: 0x0006,\r\n\r\n\tUNSIGNED_BYTE: 0x1401,\r\n\tUNSIGNED_SHORT: 0x1403,\r\n\tFLOAT: 0x1406,\r\n\tUNSIGNED_INT: 0x1405,\r\n\tARRAY_BUFFER: 0x8892,\r\n\tELEMENT_ARRAY_BUFFER: 0x8893,\r\n\r\n\tNEAREST: 0x2600,\r\n\tLINEAR: 0x2601,\r\n\tNEAREST_MIPMAP_NEAREST: 0x2700,\r\n\tLINEAR_MIPMAP_NEAREST: 0x2701,\r\n\tNEAREST_MIPMAP_LINEAR: 0x2702,\r\n\tLINEAR_MIPMAP_LINEAR: 0x2703,\r\n\r\n\tCLAMP_TO_EDGE: 33071,\r\n\tMIRRORED_REPEAT: 33648,\r\n\tREPEAT: 10497\r\n};\r\n\r\nconst THREE_TO_WEBGL = {};\r\n\r\nTHREE_TO_WEBGL[ NearestFilter ] = WEBGL_CONSTANTS.NEAREST;\r\nTHREE_TO_WEBGL[ NearestMipmapNearestFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_NEAREST;\r\nTHREE_TO_WEBGL[ NearestMipmapLinearFilter ] = WEBGL_CONSTANTS.NEAREST_MIPMAP_LINEAR;\r\nTHREE_TO_WEBGL[ LinearFilter ] = WEBGL_CONSTANTS.LINEAR;\r\nTHREE_TO_WEBGL[ LinearMipmapNearestFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_NEAREST;\r\nTHREE_TO_WEBGL[ LinearMipmapLinearFilter ] = WEBGL_CONSTANTS.LINEAR_MIPMAP_LINEAR;\r\n\r\nTHREE_TO_WEBGL[ ClampToEdgeWrapping ] = WEBGL_CONSTANTS.CLAMP_TO_EDGE;\r\nTHREE_TO_WEBGL[ RepeatWrapping ] = WEBGL_CONSTANTS.REPEAT;\r\nTHREE_TO_WEBGL[ MirroredRepeatWrapping ] = WEBGL_CONSTANTS.MIRRORED_REPEAT;\r\n\r\nconst PATH_PROPERTIES = {\r\n\tscale: 'scale',\r\n\tposition: 'translation',\r\n\tquaternion: 'rotation',\r\n\tmorphTargetInfluences: 'weights'\r\n};\r\n\r\n// GLB constants\r\n// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\r\n\r\nconst GLB_HEADER_BYTES = 12;\r\nconst GLB_HEADER_MAGIC = 0x46546C67;\r\nconst GLB_VERSION = 2;\r\n\r\nconst GLB_CHUNK_PREFIX_BYTES = 8;\r\nconst GLB_CHUNK_TYPE_JSON = 0x4E4F534A;\r\nconst GLB_CHUNK_TYPE_BIN = 0x004E4942;\r\n\r\n//------------------------------------------------------------------------------\r\n// Utility functions\r\n//------------------------------------------------------------------------------\r\n\r\n/**\r\n * Compare two arrays\r\n * @param  {Array} array1 Array 1 to compare\r\n * @param  {Array} array2 Array 2 to compare\r\n * @return {Boolean}        Returns true if both arrays are equal\r\n */\r\nfunction equalArray( array1, array2 ) {\r\n\r\n\treturn ( array1.length === array2.length ) && array1.every( function ( element, index ) {\r\n\r\n\t\treturn element === array2[ index ];\r\n\r\n\t} );\r\n\r\n}\r\n\r\n/**\r\n * Converts a string to an ArrayBuffer.\r\n * @param  {string} text\r\n * @return {ArrayBuffer}\r\n */\r\nfunction stringToArrayBuffer( text ) {\r\n\r\n\treturn new TextEncoder().encode( text ).buffer;\r\n\r\n}\r\n\r\n/**\r\n * Is identity matrix\r\n *\r\n * @param {Matrix4} matrix\r\n * @returns {Boolean} Returns true, if parameter is identity matrix\r\n */\r\nfunction isIdentityMatrix( matrix ) {\r\n\r\n\treturn equalArray( matrix.elements, [ 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 ] );\r\n\r\n}\r\n\r\n/**\r\n * Get the min and max vectors from the given attribute\r\n * @param  {BufferAttribute} attribute Attribute to find the min/max in range from start to start + count\r\n * @param  {Integer} start\r\n * @param  {Integer} count\r\n * @return {Object} Object containing the `min` and `max` values (As an array of attribute.itemSize components)\r\n */\r\nfunction getMinMax( attribute, start, count ) {\r\n\r\n\tconst output = {\r\n\r\n\t\tmin: new Array( attribute.itemSize ).fill( Number.POSITIVE_INFINITY ),\r\n\t\tmax: new Array( attribute.itemSize ).fill( Number.NEGATIVE_INFINITY )\r\n\r\n\t};\r\n\r\n\tfor ( let i = start; i < start + count; i ++ ) {\r\n\r\n\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\r\n\r\n\t\t\tlet value;\r\n\r\n\t\t\tif ( attribute.itemSize > 4 ) {\r\n\r\n\t\t\t\t // no support for interleaved data for itemSize > 4\r\n\r\n\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\r\n\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\r\n\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\r\n\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\r\n\r\n\t\t\t\tif ( attribute.normalized === true ) {\r\n\r\n\t\t\t\t\tvalue = MathUtils.normalize( value, attribute.array );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.min[ a ] = Math.min( output.min[ a ], value );\r\n\t\t\toutput.max[ a ] = Math.max( output.max[ a ], value );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn output;\r\n\r\n}\r\n\r\n/**\r\n * Get the required size + padding for a buffer, rounded to the next 4-byte boundary.\r\n * https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment\r\n *\r\n * @param {Integer} bufferSize The size the original buffer.\r\n * @returns {Integer} new buffer size with required padding.\r\n *\r\n */\r\nfunction getPaddedBufferSize( bufferSize ) {\r\n\r\n\treturn Math.ceil( bufferSize / 4 ) * 4;\r\n\r\n}\r\n\r\n/**\r\n * Returns a buffer aligned to 4-byte boundary.\r\n *\r\n * @param {ArrayBuffer} arrayBuffer Buffer to pad\r\n * @param {Integer} paddingByte (Optional)\r\n * @returns {ArrayBuffer} The same buffer if it's already aligned to 4-byte boundary or a new buffer\r\n */\r\nfunction getPaddedArrayBuffer( arrayBuffer, paddingByte = 0 ) {\r\n\r\n\tconst paddedLength = getPaddedBufferSize( arrayBuffer.byteLength );\r\n\r\n\tif ( paddedLength !== arrayBuffer.byteLength ) {\r\n\r\n\t\tconst array = new Uint8Array( paddedLength );\r\n\t\tarray.set( new Uint8Array( arrayBuffer ) );\r\n\r\n\t\tif ( paddingByte !== 0 ) {\r\n\r\n\t\t\tfor ( let i = arrayBuffer.byteLength; i < paddedLength; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = paddingByte;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn array.buffer;\r\n\r\n\t}\r\n\r\n\treturn arrayBuffer;\r\n\r\n}\r\n\r\nfunction getCanvas() {\r\n\r\n\tif ( typeof document === 'undefined' && typeof OffscreenCanvas !== 'undefined' ) {\r\n\r\n\t\treturn new OffscreenCanvas( 1, 1 );\r\n\r\n\t}\r\n\r\n\treturn document.createElement( 'canvas' );\r\n\r\n}\r\n\r\nfunction getToBlobPromise( canvas, mimeType ) {\r\n\r\n\tif ( canvas.toBlob !== undefined ) {\r\n\r\n\t\treturn new Promise( ( resolve ) => canvas.toBlob( resolve, mimeType ) );\r\n\r\n\t}\r\n\r\n\tlet quality;\r\n\r\n\t// Blink's implementation of convertToBlob seems to default to a quality level of 100%\r\n\t// Use the Blink default quality levels of toBlob instead so that file sizes are comparable.\r\n\tif ( mimeType === 'image/jpeg' ) {\r\n\r\n\t\tquality = 0.92;\r\n\r\n\t} else if ( mimeType === 'image/webp' ) {\r\n\r\n\t\tquality = 0.8;\r\n\r\n\t}\r\n\r\n\treturn canvas.convertToBlob( {\r\n\r\n\t\ttype: mimeType,\r\n\t\tquality: quality\r\n\r\n\t} );\r\n\r\n}\r\n\r\n/**\r\n * Writer\r\n */\r\nclass GLTFWriter {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.plugins = [];\r\n\r\n\t\tthis.options = {};\r\n\t\tthis.pending = [];\r\n\t\tthis.buffers = [];\r\n\r\n\t\tthis.byteOffset = 0;\r\n\t\tthis.buffers = [];\r\n\t\tthis.nodeMap = new Map();\r\n\t\tthis.skins = [];\r\n\t\tthis.extensionsUsed = {};\r\n\r\n\t\tthis.uids = new Map();\r\n\t\tthis.uid = 0;\r\n\r\n\t\tthis.json = {\r\n\t\t\tasset: {\r\n\t\t\t\tversion: '2.0',\r\n\t\t\t\tgenerator: 'THREE.GLTFExporter'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.cache = {\r\n\t\t\tmeshes: new Map(),\r\n\t\t\tattributes: new Map(),\r\n\t\t\tattributesNormalized: new Map(),\r\n\t\t\tmaterials: new Map(),\r\n\t\t\ttextures: new Map(),\r\n\t\t\timages: new Map()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tsetPlugins( plugins ) {\r\n\r\n\t\tthis.plugins = plugins;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Parse scenes and generate GLTF output\r\n\t * @param  {Scene or [THREE.Scenes]} input   Scene or Array of THREE.Scenes\r\n\t * @param  {Function} onDone  Callback on completed\r\n\t * @param  {Object} options options\r\n\t */\r\n\tasync write( input, onDone, options = {} ) {\r\n\r\n\t\tthis.options = Object.assign( {\r\n\t\t\t// default options\r\n\t\t\tbinary: false,\r\n\t\t\ttrs: false,\r\n\t\t\tonlyVisible: true,\r\n\t\t\tmaxTextureSize: Infinity,\r\n\t\t\tanimations: [],\r\n\t\t\tincludeCustomExtensions: false\r\n\t\t}, options );\r\n\r\n\t\tif ( this.options.animations.length > 0 ) {\r\n\r\n\t\t\t// Only TRS properties, and not matrices, may be targeted by animation.\r\n\t\t\tthis.options.trs = true;\r\n\r\n\t\t}\r\n\r\n\t\tthis.processInput( input );\r\n\r\n\t\tawait Promise.all( this.pending );\r\n\r\n\t\tconst writer = this;\r\n\t\tconst buffers = writer.buffers;\r\n\t\tconst json = writer.json;\r\n\t\toptions = writer.options;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\t// Merge buffers.\r\n\t\tconst blob = new Blob( buffers, { type: 'application/octet-stream' } );\r\n\r\n\t\t// Declare extensions.\r\n\t\tconst extensionsUsedList = Object.keys( extensionsUsed );\r\n\r\n\t\tif ( extensionsUsedList.length > 0 ) json.extensionsUsed = extensionsUsedList;\r\n\r\n\t\t// Update bytelength of the single buffer.\r\n\t\tif ( json.buffers && json.buffers.length > 0 ) json.buffers[ 0 ].byteLength = blob.size;\r\n\r\n\t\tif ( options.binary === true ) {\r\n\r\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#glb-file-format-specification\r\n\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer( blob );\r\n\t\t\treader.onloadend = function () {\r\n\r\n\t\t\t\t// Binary chunk.\r\n\t\t\t\tconst binaryChunk = getPaddedArrayBuffer( reader.result );\r\n\t\t\t\tconst binaryChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\r\n\t\t\t\tbinaryChunkPrefix.setUint32( 0, binaryChunk.byteLength, true );\r\n\t\t\t\tbinaryChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_BIN, true );\r\n\r\n\t\t\t\t// JSON chunk.\r\n\t\t\t\tconst jsonChunk = getPaddedArrayBuffer( stringToArrayBuffer( JSON.stringify( json ) ), 0x20 );\r\n\t\t\t\tconst jsonChunkPrefix = new DataView( new ArrayBuffer( GLB_CHUNK_PREFIX_BYTES ) );\r\n\t\t\t\tjsonChunkPrefix.setUint32( 0, jsonChunk.byteLength, true );\r\n\t\t\t\tjsonChunkPrefix.setUint32( 4, GLB_CHUNK_TYPE_JSON, true );\r\n\r\n\t\t\t\t// GLB header.\r\n\t\t\t\tconst header = new ArrayBuffer( GLB_HEADER_BYTES );\r\n\t\t\t\tconst headerView = new DataView( header );\r\n\t\t\t\theaderView.setUint32( 0, GLB_HEADER_MAGIC, true );\r\n\t\t\t\theaderView.setUint32( 4, GLB_VERSION, true );\r\n\t\t\t\tconst totalByteLength = GLB_HEADER_BYTES\r\n\t\t\t\t\t+ jsonChunkPrefix.byteLength + jsonChunk.byteLength\r\n\t\t\t\t\t+ binaryChunkPrefix.byteLength + binaryChunk.byteLength;\r\n\t\t\t\theaderView.setUint32( 8, totalByteLength, true );\r\n\r\n\t\t\t\tconst glbBlob = new Blob( [\r\n\t\t\t\t\theader,\r\n\t\t\t\t\tjsonChunkPrefix,\r\n\t\t\t\t\tjsonChunk,\r\n\t\t\t\t\tbinaryChunkPrefix,\r\n\t\t\t\t\tbinaryChunk\r\n\t\t\t\t], { type: 'application/octet-stream' } );\r\n\r\n\t\t\t\tconst glbReader = new FileReader();\r\n\t\t\t\tglbReader.readAsArrayBuffer( glbBlob );\r\n\t\t\t\tglbReader.onloadend = function () {\r\n\r\n\t\t\t\t\tonDone( glbReader.result );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( json.buffers && json.buffers.length > 0 ) {\r\n\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.readAsDataURL( blob );\r\n\t\t\t\treader.onloadend = function () {\r\n\r\n\t\t\t\t\tconst base64data = reader.result;\r\n\t\t\t\t\tjson.buffers[ 0 ].uri = base64data;\r\n\t\t\t\t\tonDone( json );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tonDone( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes a userData.\r\n\t *\r\n\t * @param {THREE.Object3D|THREE.Material} object\r\n\t * @param {Object} objectDef\r\n\t */\r\n\tserializeUserData( object, objectDef ) {\r\n\r\n\t\tif ( Object.keys( object.userData ).length === 0 ) return;\r\n\r\n\t\tconst options = this.options;\r\n\t\tconst extensionsUsed = this.extensionsUsed;\r\n\r\n\t\ttry {\r\n\r\n\t\t\tconst json = JSON.parse( JSON.stringify( object.userData ) );\r\n\r\n\t\t\tif ( options.includeCustomExtensions && json.gltfExtensions ) {\r\n\r\n\t\t\t\tif ( objectDef.extensions === undefined ) objectDef.extensions = {};\r\n\r\n\t\t\t\tfor ( const extensionName in json.gltfExtensions ) {\r\n\r\n\t\t\t\t\tobjectDef.extensions[ extensionName ] = json.gltfExtensions[ extensionName ];\r\n\t\t\t\t\textensionsUsed[ extensionName ] = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete json.gltfExtensions;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( Object.keys( json ).length > 0 ) objectDef.extras = json;\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFExporter: userData of \\'' + object.name + '\\' ' +\r\n\t\t\t\t'won\\'t be serialized because of JSON.stringify error - ' + error.message );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns ids for buffer attributes.\r\n\t * @param  {Object} object\r\n\t * @return {Integer}\r\n\t */\r\n\tgetUID( attribute, isRelativeCopy = false ) {\r\n\r\n\t\tif ( this.uids.has( attribute ) === false ) {\r\n\r\n\t\t\tconst uids = new Map();\r\n\r\n\t\t\tuids.set( true, this.uid ++ );\r\n\t\t\tuids.set( false, this.uid ++ );\r\n\r\n\t\t\tthis.uids.set( attribute, uids );\r\n\r\n\t\t}\r\n\r\n\t\tconst uids = this.uids.get( attribute );\r\n\r\n\t\treturn uids.get( isRelativeCopy );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if normal attribute values are normalized.\r\n\t *\r\n\t * @param {BufferAttribute} normal\r\n\t * @returns {Boolean}\r\n\t */\r\n\tisNormalizedNormalAttribute( normal ) {\r\n\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif ( cache.attributesNormalized.has( normal ) ) return false;\r\n\r\n\t\tconst v = new Vector3();\r\n\r\n\t\tfor ( let i = 0, il = normal.count; i < il; i ++ ) {\r\n\r\n\t\t\t// 0.0005 is from glTF-validator\r\n\t\t\tif ( Math.abs( v.fromBufferAttribute( normal, i ).length() - 1.0 ) > 0.0005 ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates normalized normal buffer attribute.\r\n\t *\r\n\t * @param {BufferAttribute} normal\r\n\t * @returns {BufferAttribute}\r\n\t *\r\n\t */\r\n\tcreateNormalizedNormalAttribute( normal ) {\r\n\r\n\t\tconst cache = this.cache;\r\n\r\n\t\tif ( cache.attributesNormalized.has( normal ) )\treturn cache.attributesNormalized.get( normal );\r\n\r\n\t\tconst attribute = normal.clone();\r\n\t\tconst v = new Vector3();\r\n\r\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\r\n\r\n\t\t\tv.fromBufferAttribute( attribute, i );\r\n\r\n\t\t\tif ( v.x === 0 && v.y === 0 && v.z === 0 ) {\r\n\r\n\t\t\t\t// if values can't be normalized set (1, 0, 0)\r\n\t\t\t\tv.setX( 1.0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv.normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattribute.setXYZ( i, v.x, v.y, v.z );\r\n\r\n\t\t}\r\n\r\n\t\tcache.attributesNormalized.set( normal, attribute );\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a texture transform, if present, to the map definition. Requires\r\n\t * the KHR_texture_transform extension.\r\n\t *\r\n\t * @param {Object} mapDef\r\n\t * @param {THREE.Texture} texture\r\n\t */\r\n\tapplyTextureTransform( mapDef, texture ) {\r\n\r\n\t\tlet didTransform = false;\r\n\t\tconst transformDef = {};\r\n\r\n\t\tif ( texture.offset.x !== 0 || texture.offset.y !== 0 ) {\r\n\r\n\t\t\ttransformDef.offset = texture.offset.toArray();\r\n\t\t\tdidTransform = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.rotation !== 0 ) {\r\n\r\n\t\t\ttransformDef.rotation = texture.rotation;\r\n\t\t\tdidTransform = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.repeat.x !== 1 || texture.repeat.y !== 1 ) {\r\n\r\n\t\t\ttransformDef.scale = texture.repeat.toArray();\r\n\t\t\tdidTransform = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( didTransform ) {\r\n\r\n\t\t\tmapDef.extensions = mapDef.extensions || {};\r\n\t\t\tmapDef.extensions[ 'KHR_texture_transform' ] = transformDef;\r\n\t\t\tthis.extensionsUsed[ 'KHR_texture_transform' ] = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbuildMetalRoughTexture( metalnessMap, roughnessMap ) {\r\n\r\n\t\tif ( metalnessMap === roughnessMap ) return metalnessMap;\r\n\r\n\t\tfunction getEncodingConversion( map ) {\r\n\r\n\t\t\tif ( map.encoding === sRGBEncoding ) {\r\n\r\n\t\t\t\treturn function SRGBToLinear( c ) {\r\n\r\n\t\t\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn function LinearToLinear( c ) {\r\n\r\n\t\t\t\treturn c;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.GLTFExporter: Merged metalnessMap and roughnessMap textures.' );\r\n\r\n\t\tconst metalness = metalnessMap ? metalnessMap.image : null;\r\n\t\tconst roughness = roughnessMap ? roughnessMap.image : null;\r\n\r\n\t\tconst width = Math.max( metalness ? metalness.width : 0, roughness ? roughness.width : 0 );\r\n\t\tconst height = Math.max( metalness ? metalness.height : 0, roughness ? roughness.height : 0 );\r\n\r\n\t\tconst canvas = getCanvas();\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tconst context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = '#00ffff';\r\n\t\tcontext.fillRect( 0, 0, width, height );\r\n\r\n\t\tconst composite = context.getImageData( 0, 0, width, height );\r\n\r\n\t\tif ( metalness ) {\r\n\r\n\t\t\tcontext.drawImage( metalness, 0, 0, width, height );\r\n\r\n\t\t\tconst convert = getEncodingConversion( metalnessMap );\r\n\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\r\n\r\n\t\t\tfor ( let i = 2; i < data.length; i += 4 ) {\r\n\r\n\t\t\t\tcomposite.data[ i ] = convert( data[ i ] / 256 ) * 256;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( roughness ) {\r\n\r\n\t\t\tcontext.drawImage( roughness, 0, 0, width, height );\r\n\r\n\t\t\tconst convert = getEncodingConversion( roughnessMap );\r\n\t\t\tconst data = context.getImageData( 0, 0, width, height ).data;\r\n\r\n\t\t\tfor ( let i = 1; i < data.length; i += 4 ) {\r\n\r\n\t\t\t\tcomposite.data[ i ] = convert( data[ i ] / 256 ) * 256;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( composite, 0, 0 );\r\n\r\n\t\t//\r\n\r\n\t\tconst reference = metalnessMap || roughnessMap;\r\n\r\n\t\tconst texture = reference.clone();\r\n\r\n\t\ttexture.source = new Source( canvas );\r\n\t\ttexture.encoding = LinearEncoding;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process a buffer to append to the default one.\r\n\t * @param  {ArrayBuffer} buffer\r\n\t * @return {Integer}\r\n\t */\r\n\tprocessBuffer( buffer ) {\r\n\r\n\t\tconst json = this.json;\r\n\t\tconst buffers = this.buffers;\r\n\r\n\t\tif ( ! json.buffers ) json.buffers = [ { byteLength: 0 } ];\r\n\r\n\t\t// All buffers are merged before export.\r\n\t\tbuffers.push( buffer );\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process and generate a BufferView\r\n\t * @param  {BufferAttribute} attribute\r\n\t * @param  {number} componentType\r\n\t * @param  {number} start\r\n\t * @param  {number} count\r\n\t * @param  {number} target (Optional) Target usage of the BufferView\r\n\t * @return {Object}\r\n\t */\r\n\tprocessBufferView( attribute, componentType, start, count, target ) {\r\n\r\n\t\tconst json = this.json;\r\n\r\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\r\n\r\n\t\t// Create a new dataview and dump the attribute's array into it\r\n\r\n\t\tlet componentSize;\r\n\r\n\t\tif ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\r\n\r\n\t\t\tcomponentSize = 1;\r\n\r\n\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\r\n\r\n\t\t\tcomponentSize = 2;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcomponentSize = 4;\r\n\r\n\t\t}\r\n\r\n\t\tconst byteLength = getPaddedBufferSize( count * attribute.itemSize * componentSize );\r\n\t\tconst dataView = new DataView( new ArrayBuffer( byteLength ) );\r\n\t\tlet offset = 0;\r\n\r\n\t\tfor ( let i = start; i < start + count; i ++ ) {\r\n\r\n\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\r\n\r\n\t\t\t\tlet value;\r\n\r\n\t\t\t\tif ( attribute.itemSize > 4 ) {\r\n\r\n\t\t\t\t\t // no support for interleaved data for itemSize > 4\r\n\r\n\t\t\t\t\tvalue = attribute.array[ i * attribute.itemSize + a ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( a === 0 ) value = attribute.getX( i );\r\n\t\t\t\t\telse if ( a === 1 ) value = attribute.getY( i );\r\n\t\t\t\t\telse if ( a === 2 ) value = attribute.getZ( i );\r\n\t\t\t\t\telse if ( a === 3 ) value = attribute.getW( i );\r\n\r\n\t\t\t\t\tif ( attribute.normalized === true ) {\r\n\r\n\t\t\t\t\t\tvalue = MathUtils.normalize( value, attribute.array );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( componentType === WEBGL_CONSTANTS.FLOAT ) {\r\n\r\n\t\t\t\t\tdataView.setFloat32( offset, value, true );\r\n\r\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_INT ) {\r\n\r\n\t\t\t\t\tdataView.setUint32( offset, value, true );\r\n\r\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_SHORT ) {\r\n\r\n\t\t\t\t\tdataView.setUint16( offset, value, true );\r\n\r\n\t\t\t\t} else if ( componentType === WEBGL_CONSTANTS.UNSIGNED_BYTE ) {\r\n\r\n\t\t\t\t\tdataView.setUint8( offset, value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\toffset += componentSize;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst bufferViewDef = {\r\n\r\n\t\t\tbuffer: this.processBuffer( dataView.buffer ),\r\n\t\t\tbyteOffset: this.byteOffset,\r\n\t\t\tbyteLength: byteLength\r\n\r\n\t\t};\r\n\r\n\t\tif ( target !== undefined ) bufferViewDef.target = target;\r\n\r\n\t\tif ( target === WEBGL_CONSTANTS.ARRAY_BUFFER ) {\r\n\r\n\t\t\t// Only define byteStride for vertex attributes.\r\n\t\t\tbufferViewDef.byteStride = attribute.itemSize * componentSize;\r\n\r\n\t\t}\r\n\r\n\t\tthis.byteOffset += byteLength;\r\n\r\n\t\tjson.bufferViews.push( bufferViewDef );\r\n\r\n\t\t// @TODO Merge bufferViews where possible.\r\n\t\tconst output = {\r\n\r\n\t\t\tid: json.bufferViews.length - 1,\r\n\t\t\tbyteLength: 0\r\n\r\n\t\t};\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process and generate a BufferView from an image Blob.\r\n\t * @param {Blob} blob\r\n\t * @return {Promise<Integer>}\r\n\t */\r\n\tprocessBufferViewImage( blob ) {\r\n\r\n\t\tconst writer = this;\r\n\t\tconst json = writer.json;\r\n\r\n\t\tif ( ! json.bufferViews ) json.bufferViews = [];\r\n\r\n\t\treturn new Promise( function ( resolve ) {\r\n\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsArrayBuffer( blob );\r\n\t\t\treader.onloadend = function () {\r\n\r\n\t\t\t\tconst buffer = getPaddedArrayBuffer( reader.result );\r\n\r\n\t\t\t\tconst bufferViewDef = {\r\n\t\t\t\t\tbuffer: writer.processBuffer( buffer ),\r\n\t\t\t\t\tbyteOffset: writer.byteOffset,\r\n\t\t\t\t\tbyteLength: buffer.byteLength\r\n\t\t\t\t};\r\n\r\n\t\t\t\twriter.byteOffset += buffer.byteLength;\r\n\t\t\t\tresolve( json.bufferViews.push( bufferViewDef ) - 1 );\r\n\r\n\t\t\t};\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process attribute to generate an accessor\r\n\t * @param  {BufferAttribute} attribute Attribute to process\r\n\t * @param  {THREE.BufferGeometry} geometry (Optional) Geometry used for truncated draw range\r\n\t * @param  {Integer} start (Optional)\r\n\t * @param  {Integer} count (Optional)\r\n\t * @return {Integer|null} Index of the processed accessor on the \"accessors\" array\r\n\t */\r\n\tprocessAccessor( attribute, geometry, start, count ) {\r\n\r\n\t\tconst json = this.json;\r\n\r\n\t\tconst types = {\r\n\r\n\t\t\t1: 'SCALAR',\r\n\t\t\t2: 'VEC2',\r\n\t\t\t3: 'VEC3',\r\n\t\t\t4: 'VEC4',\r\n\t\t\t16: 'MAT4'\r\n\r\n\t\t};\r\n\r\n\t\tlet componentType;\r\n\r\n\t\t// Detect the component type of the attribute array (float, uint or ushort)\r\n\t\tif ( attribute.array.constructor === Float32Array ) {\r\n\r\n\t\t\tcomponentType = WEBGL_CONSTANTS.FLOAT;\r\n\r\n\t\t} else if ( attribute.array.constructor === Uint32Array ) {\r\n\r\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_INT;\r\n\r\n\t\t} else if ( attribute.array.constructor === Uint16Array ) {\r\n\r\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_SHORT;\r\n\r\n\t\t} else if ( attribute.array.constructor === Uint8Array ) {\r\n\r\n\t\t\tcomponentType = WEBGL_CONSTANTS.UNSIGNED_BYTE;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFExporter: Unsupported bufferAttribute component type.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( start === undefined ) start = 0;\r\n\t\tif ( count === undefined ) count = attribute.count;\r\n\r\n\t\t// Skip creating an accessor if the attribute doesn't have data to export\r\n\t\tif ( count === 0 ) return null;\r\n\r\n\t\tconst minMax = getMinMax( attribute, start, count );\r\n\t\tlet bufferViewTarget;\r\n\r\n\t\t// If geometry isn't provided, don't infer the target usage of the bufferView. For\r\n\t\t// animation samplers, target must not be set.\r\n\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\tbufferViewTarget = attribute === geometry.index ? WEBGL_CONSTANTS.ELEMENT_ARRAY_BUFFER : WEBGL_CONSTANTS.ARRAY_BUFFER;\r\n\r\n\t\t}\r\n\r\n\t\tconst bufferView = this.processBufferView( attribute, componentType, start, count, bufferViewTarget );\r\n\r\n\t\tconst accessorDef = {\r\n\r\n\t\t\tbufferView: bufferView.id,\r\n\t\t\tbyteOffset: bufferView.byteOffset,\r\n\t\t\tcomponentType: componentType,\r\n\t\t\tcount: count,\r\n\t\t\tmax: minMax.max,\r\n\t\t\tmin: minMax.min,\r\n\t\t\ttype: types[ attribute.itemSize ]\r\n\r\n\t\t};\r\n\r\n\t\tif ( attribute.normalized === true ) accessorDef.normalized = true;\r\n\t\tif ( ! json.accessors ) json.accessors = [];\r\n\r\n\t\treturn json.accessors.push( accessorDef ) - 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process image\r\n\t * @param  {Image} image to process\r\n\t * @param  {Integer} format of the image (RGBAFormat)\r\n\t * @param  {Boolean} flipY before writing out the image\r\n\t * @param  {String} mimeType export format\r\n\t * @return {Integer}     Index of the processed texture in the \"images\" array\r\n\t */\r\n\tprocessImage( image, format, flipY, mimeType = 'image/png' ) {\r\n\r\n\t\tif ( image !== null ) {\r\n\r\n\t\t\tconst writer = this;\r\n\t\t\tconst cache = writer.cache;\r\n\t\t\tconst json = writer.json;\r\n\t\t\tconst options = writer.options;\r\n\t\t\tconst pending = writer.pending;\r\n\r\n\t\t\tif ( ! cache.images.has( image ) ) cache.images.set( image, {} );\r\n\r\n\t\t\tconst cachedImages = cache.images.get( image );\r\n\r\n\t\t\tconst key = mimeType + ':flipY/' + flipY.toString();\r\n\r\n\t\t\tif ( cachedImages[ key ] !== undefined ) return cachedImages[ key ];\r\n\r\n\t\t\tif ( ! json.images ) json.images = [];\r\n\r\n\t\t\tconst imageDef = { mimeType: mimeType };\r\n\r\n\t\t\tconst canvas = getCanvas();\r\n\r\n\t\t\tcanvas.width = Math.min( image.width, options.maxTextureSize );\r\n\t\t\tcanvas.height = Math.min( image.height, options.maxTextureSize );\r\n\r\n\t\t\tconst ctx = canvas.getContext( '2d' );\r\n\r\n\t\t\tif ( flipY === true ) {\r\n\r\n\t\t\t\tctx.translate( 0, canvas.height );\r\n\t\t\t\tctx.scale( 1, - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.data !== undefined ) { // THREE.DataTexture\r\n\r\n\t\t\t\tif ( format !== RGBAFormat ) {\r\n\r\n\t\t\t\t\tconsole.error( 'GLTFExporter: Only RGBAFormat is supported.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( image.width > options.maxTextureSize || image.height > options.maxTextureSize ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'GLTFExporter: Image size is bigger than maxTextureSize', image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst data = new Uint8ClampedArray( image.height * image.width * 4 );\r\n\r\n\t\t\t\tfor ( let i = 0; i < data.length; i += 4 ) {\r\n\r\n\t\t\t\t\tdata[ i + 0 ] = image.data[ i + 0 ];\r\n\t\t\t\t\tdata[ i + 1 ] = image.data[ i + 1 ];\r\n\t\t\t\t\tdata[ i + 2 ] = image.data[ i + 2 ];\r\n\t\t\t\t\tdata[ i + 3 ] = image.data[ i + 3 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.putImageData( new ImageData( data, image.width, image.height ), 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tctx.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.binary === true ) {\r\n\r\n\t\t\t\tpending.push(\r\n\r\n\t\t\t\t\tgetToBlobPromise( canvas, mimeType )\r\n\t\t\t\t\t\t.then( blob => writer.processBufferViewImage( blob ) )\r\n\t\t\t\t\t\t.then( bufferViewIndex => {\r\n\r\n\t\t\t\t\t\t\timageDef.bufferView = bufferViewIndex;\r\n\r\n\t\t\t\t\t\t} )\r\n\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( canvas.toDataURL !== undefined ) {\r\n\r\n\t\t\t\t\timageDef.uri = canvas.toDataURL( mimeType );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tpending.push(\r\n\r\n\t\t\t\t\t\tgetToBlobPromise( canvas, mimeType )\r\n\t\t\t\t\t\t\t.then( blob => new FileReader().readAsDataURL( blob ) )\r\n\t\t\t\t\t\t\t.then( dataURL => {\r\n\r\n\t\t\t\t\t\t\t\timageDef.uri = dataURL;\r\n\r\n\t\t\t\t\t\t\t} )\r\n\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst index = json.images.push( imageDef ) - 1;\r\n\t\t\tcachedImages[ key ] = index;\r\n\t\t\treturn index;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.GLTFExporter: No valid image data found. Unable to process texture.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process sampler\r\n\t * @param  {Texture} map Texture to process\r\n\t * @return {Integer}     Index of the processed texture in the \"samplers\" array\r\n\t */\r\n\tprocessSampler( map ) {\r\n\r\n\t\tconst json = this.json;\r\n\r\n\t\tif ( ! json.samplers ) json.samplers = [];\r\n\r\n\t\tconst samplerDef = {\r\n\t\t\tmagFilter: THREE_TO_WEBGL[ map.magFilter ],\r\n\t\t\tminFilter: THREE_TO_WEBGL[ map.minFilter ],\r\n\t\t\twrapS: THREE_TO_WEBGL[ map.wrapS ],\r\n\t\t\twrapT: THREE_TO_WEBGL[ map.wrapT ]\r\n\t\t};\r\n\r\n\t\treturn json.samplers.push( samplerDef ) - 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process texture\r\n\t * @param  {Texture} map Map to process\r\n\t * @return {Integer} Index of the processed texture in the \"textures\" array\r\n\t */\r\n\tprocessTexture( map ) {\r\n\r\n\t\tconst cache = this.cache;\r\n\t\tconst json = this.json;\r\n\r\n\t\tif ( cache.textures.has( map ) ) return cache.textures.get( map );\r\n\r\n\t\tif ( ! json.textures ) json.textures = [];\r\n\r\n\t\tlet mimeType = map.userData.mimeType;\r\n\r\n\t\tif ( mimeType === 'image/webp' ) mimeType = 'image/png';\r\n\r\n\t\tconst textureDef = {\r\n\t\t\tsampler: this.processSampler( map ),\r\n\t\t\tsource: this.processImage( map.image, map.format, map.flipY, mimeType )\r\n\t\t};\r\n\r\n\t\tif ( map.name ) textureDef.name = map.name;\r\n\r\n\t\tthis._invokeAll( function ( ext ) {\r\n\r\n\t\t\text.writeTexture && ext.writeTexture( map, textureDef );\r\n\r\n\t\t} );\r\n\r\n\t\tconst index = json.textures.push( textureDef ) - 1;\r\n\t\tcache.textures.set( map, index );\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process material\r\n\t * @param  {THREE.Material} material Material to process\r\n\t * @return {Integer|null} Index of the processed material in the \"materials\" array\r\n\t */\r\n\tprocessMaterial( material ) {\r\n\r\n\t\tconst cache = this.cache;\r\n\t\tconst json = this.json;\r\n\r\n\t\tif ( cache.materials.has( material ) ) return cache.materials.get( material );\r\n\r\n\t\tif ( material.isShaderMaterial ) {\r\n\r\n\t\t\tconsole.warn( 'GLTFExporter: THREE.ShaderMaterial not supported.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! json.materials ) json.materials = [];\r\n\r\n\t\t// @QUESTION Should we avoid including any attribute that has the default value?\r\n\t\tconst materialDef = {\tpbrMetallicRoughness: {} };\r\n\r\n\t\tif ( material.isMeshStandardMaterial !== true && material.isMeshBasicMaterial !== true ) {\r\n\r\n\t\t\tconsole.warn( 'GLTFExporter: Use MeshStandardMaterial or MeshBasicMaterial for best results.' );\r\n\r\n\t\t}\r\n\r\n\t\t// pbrMetallicRoughness.baseColorFactor\r\n\t\tconst color = material.color.toArray().concat( [ material.opacity ] );\r\n\r\n\t\tif ( ! equalArray( color, [ 1, 1, 1, 1 ] ) ) {\r\n\r\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorFactor = color;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.isMeshStandardMaterial ) {\r\n\r\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = material.metalness;\r\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = material.roughness;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.5;\r\n\t\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.5;\r\n\r\n\t\t}\r\n\r\n\t\t// pbrMetallicRoughness.metallicRoughnessTexture\r\n\t\tif ( material.metalnessMap || material.roughnessMap ) {\r\n\r\n\t\t\tconst metalRoughTexture = this.buildMetalRoughTexture( material.metalnessMap, material.roughnessMap );\r\n\r\n\t\t\tconst metalRoughMapDef = { index: this.processTexture( metalRoughTexture ) };\r\n\t\t\tthis.applyTextureTransform( metalRoughMapDef, metalRoughTexture );\r\n\t\t\tmaterialDef.pbrMetallicRoughness.metallicRoughnessTexture = metalRoughMapDef;\r\n\r\n\t\t}\r\n\r\n\t\t// pbrMetallicRoughness.baseColorTexture or pbrSpecularGlossiness diffuseTexture\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tconst baseColorMapDef = { index: this.processTexture( material.map ) };\r\n\t\t\tthis.applyTextureTransform( baseColorMapDef, material.map );\r\n\t\t\tmaterialDef.pbrMetallicRoughness.baseColorTexture = baseColorMapDef;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\t// note: emissive components are limited to stay within the 0 - 1 range to accommodate glTF spec. see #21849 and #22000.\r\n\t\t\tconst emissive = material.emissive.clone().multiplyScalar( material.emissiveIntensity );\r\n\t\t\tconst maxEmissiveComponent = Math.max( emissive.r, emissive.g, emissive.b );\r\n\r\n\t\t\tif ( maxEmissiveComponent > 1 ) {\r\n\r\n\t\t\t\temissive.multiplyScalar( 1 / maxEmissiveComponent );\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Some emissive components exceed 1; emissive has been limited' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( maxEmissiveComponent > 0 ) {\r\n\r\n\t\t\t\tmaterialDef.emissiveFactor = emissive.toArray();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// emissiveTexture\r\n\t\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\t\tconst emissiveMapDef = { index: this.processTexture( material.emissiveMap ) };\r\n\t\t\t\tthis.applyTextureTransform( emissiveMapDef, material.emissiveMap );\r\n\t\t\t\tmaterialDef.emissiveTexture = emissiveMapDef;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// normalTexture\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tconst normalMapDef = { index: this.processTexture( material.normalMap ) };\r\n\r\n\t\t\tif ( material.normalScale && material.normalScale.x !== 1 ) {\r\n\r\n\t\t\t\t// glTF normal scale is univariate. Ignore `y`, which may be flipped.\r\n\t\t\t\t// Context: https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\r\n\t\t\t\tnormalMapDef.scale = material.normalScale.x;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.applyTextureTransform( normalMapDef, material.normalMap );\r\n\t\t\tmaterialDef.normalTexture = normalMapDef;\r\n\r\n\t\t}\r\n\r\n\t\t// occlusionTexture\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tconst occlusionMapDef = {\r\n\t\t\t\tindex: this.processTexture( material.aoMap ),\r\n\t\t\t\ttexCoord: 1\r\n\t\t\t};\r\n\r\n\t\t\tif ( material.aoMapIntensity !== 1.0 ) {\r\n\r\n\t\t\t\tocclusionMapDef.strength = material.aoMapIntensity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.applyTextureTransform( occlusionMapDef, material.aoMap );\r\n\t\t\tmaterialDef.occlusionTexture = occlusionMapDef;\r\n\r\n\t\t}\r\n\r\n\t\t// alphaMode\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tmaterialDef.alphaMode = 'BLEND';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( material.alphaTest > 0.0 ) {\r\n\r\n\t\t\t\tmaterialDef.alphaMode = 'MASK';\r\n\t\t\t\tmaterialDef.alphaCutoff = material.alphaTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// doubleSided\r\n\t\tif ( material.side === DoubleSide ) materialDef.doubleSided = true;\r\n\t\tif ( material.name !== '' ) materialDef.name = material.name;\r\n\r\n\t\tthis.serializeUserData( material, materialDef );\r\n\r\n\t\tthis._invokeAll( function ( ext ) {\r\n\r\n\t\t\text.writeMaterial && ext.writeMaterial( material, materialDef );\r\n\r\n\t\t} );\r\n\r\n\t\tconst index = json.materials.push( materialDef ) - 1;\r\n\t\tcache.materials.set( material, index );\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process mesh\r\n\t * @param  {THREE.Mesh} mesh Mesh to process\r\n\t * @return {Integer|null} Index of the processed mesh in the \"meshes\" array\r\n\t */\r\n\tprocessMesh( mesh ) {\r\n\r\n\t\tconst cache = this.cache;\r\n\t\tconst json = this.json;\r\n\r\n\t\tconst meshCacheKeyParts = [ mesh.geometry.uuid ];\r\n\r\n\t\tif ( Array.isArray( mesh.material ) ) {\r\n\r\n\t\t\tfor ( let i = 0, l = mesh.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmeshCacheKeyParts.push( mesh.material[ i ].uuid\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmeshCacheKeyParts.push( mesh.material.uuid );\r\n\r\n\t\t}\r\n\r\n\t\tconst meshCacheKey = meshCacheKeyParts.join( ':' );\r\n\r\n\t\tif ( cache.meshes.has( meshCacheKey ) ) return cache.meshes.get( meshCacheKey );\r\n\r\n\t\tconst geometry = mesh.geometry;\r\n\r\n\t\tlet mode;\r\n\r\n\t\t// Use the correct mode\r\n\t\tif ( mesh.isLineSegments ) {\r\n\r\n\t\t\tmode = WEBGL_CONSTANTS.LINES;\r\n\r\n\t\t} else if ( mesh.isLineLoop ) {\r\n\r\n\t\t\tmode = WEBGL_CONSTANTS.LINE_LOOP;\r\n\r\n\t\t} else if ( mesh.isLine ) {\r\n\r\n\t\t\tmode = WEBGL_CONSTANTS.LINE_STRIP;\r\n\r\n\t\t} else if ( mesh.isPoints ) {\r\n\r\n\t\t\tmode = WEBGL_CONSTANTS.POINTS;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmode = mesh.material.wireframe ? WEBGL_CONSTANTS.LINES : WEBGL_CONSTANTS.TRIANGLES;\r\n\r\n\t\t}\r\n\r\n\t\tconst meshDef = {};\r\n\t\tconst attributes = {};\r\n\t\tconst primitives = [];\r\n\t\tconst targets = [];\r\n\r\n\t\t// Conversion between attributes names in threejs and gltf spec\r\n\t\tconst nameConversion = {\r\n\t\t\tuv: 'TEXCOORD_0',\r\n\t\t\tuv2: 'TEXCOORD_1',\r\n\t\t\tcolor: 'COLOR_0',\r\n\t\t\tskinWeight: 'WEIGHTS_0',\r\n\t\t\tskinIndex: 'JOINTS_0'\r\n\t\t};\r\n\r\n\t\tconst originalNormal = geometry.getAttribute( 'normal' );\r\n\r\n\t\tif ( originalNormal !== undefined && ! this.isNormalizedNormalAttribute( originalNormal ) ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Creating normalized normal attribute from the non-normalized one.' );\r\n\r\n\t\t\tgeometry.setAttribute( 'normal', this.createNormalizedNormalAttribute( originalNormal ) );\r\n\r\n\t\t}\r\n\r\n\t\t// @QUESTION Detect if .vertexColors = true?\r\n\t\t// For every attribute create an accessor\r\n\t\tlet modifiedAttribute = null;\r\n\r\n\t\tfor ( let attributeName in geometry.attributes ) {\r\n\r\n\t\t\t// Ignore morph target attributes, which are exported later.\r\n\t\t\tif ( attributeName.slice( 0, 5 ) === 'morph' ) continue;\r\n\r\n\t\t\tconst attribute = geometry.attributes[ attributeName ];\r\n\t\t\tattributeName = nameConversion[ attributeName ] || attributeName.toUpperCase();\r\n\r\n\t\t\t// Prefix all geometry attributes except the ones specifically\r\n\t\t\t// listed in the spec; non-spec attributes are considered custom.\r\n\t\t\tconst validVertexAttributes =\r\n\t\t\t\t\t/^(POSITION|NORMAL|TANGENT|TEXCOORD_\\d+|COLOR_\\d+|JOINTS_\\d+|WEIGHTS_\\d+)$/;\r\n\r\n\t\t\tif ( ! validVertexAttributes.test( attributeName ) ) attributeName = '_' + attributeName;\r\n\r\n\t\t\tif ( cache.attributes.has( this.getUID( attribute ) ) ) {\r\n\r\n\t\t\t\tattributes[ attributeName ] = cache.attributes.get( this.getUID( attribute ) );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// JOINTS_0 must be UNSIGNED_BYTE or UNSIGNED_SHORT.\r\n\t\t\tmodifiedAttribute = null;\r\n\t\t\tconst array = attribute.array;\r\n\r\n\t\t\tif ( attributeName === 'JOINTS_0' &&\r\n\t\t\t\t! ( array instanceof Uint16Array ) &&\r\n\t\t\t\t! ( array instanceof Uint8Array ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'GLTFExporter: Attribute \"skinIndex\" converted to type UNSIGNED_SHORT.' );\r\n\t\t\t\tmodifiedAttribute = new BufferAttribute( new Uint16Array( array ), attribute.itemSize, attribute.normalized );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst accessor = this.processAccessor( modifiedAttribute || attribute, geometry );\r\n\r\n\t\t\tif ( accessor !== null ) {\r\n\r\n\t\t\t\tattributes[ attributeName ] = accessor;\r\n\t\t\t\tcache.attributes.set( this.getUID( attribute ), accessor );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( originalNormal !== undefined ) geometry.setAttribute( 'normal', originalNormal );\r\n\r\n\t\t// Skip if no exportable attributes found\r\n\t\tif ( Object.keys( attributes ).length === 0 ) return null;\r\n\r\n\t\t// Morph targets\r\n\t\tif ( mesh.morphTargetInfluences !== undefined && mesh.morphTargetInfluences.length > 0 ) {\r\n\r\n\t\t\tconst weights = [];\r\n\t\t\tconst targetNames = [];\r\n\t\t\tconst reverseDictionary = {};\r\n\r\n\t\t\tif ( mesh.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\t\tfor ( const key in mesh.morphTargetDictionary ) {\r\n\r\n\t\t\t\t\treverseDictionary[ mesh.morphTargetDictionary[ key ] ] = key;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0; i < mesh.morphTargetInfluences.length; ++ i ) {\r\n\r\n\t\t\t\tconst target = {};\r\n\t\t\t\tlet warned = false;\r\n\r\n\t\t\t\tfor ( const attributeName in geometry.morphAttributes ) {\r\n\r\n\t\t\t\t\t// glTF 2.0 morph supports only POSITION/NORMAL/TANGENT.\r\n\t\t\t\t\t// Three.js doesn't support TANGENT yet.\r\n\r\n\t\t\t\t\tif ( attributeName !== 'position' && attributeName !== 'normal' ) {\r\n\r\n\t\t\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'GLTFExporter: Only POSITION and NORMAL morph are supported.' );\r\n\t\t\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst attribute = geometry.morphAttributes[ attributeName ][ i ];\r\n\t\t\t\t\tconst gltfAttributeName = attributeName.toUpperCase();\r\n\r\n\t\t\t\t\t// Three.js morph attribute has absolute values while the one of glTF has relative values.\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// glTF 2.0 Specification:\r\n\t\t\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#morph-targets\r\n\r\n\t\t\t\t\tconst baseAttribute = geometry.attributes[ attributeName ];\r\n\r\n\t\t\t\t\tif ( cache.attributes.has( this.getUID( attribute, true ) ) ) {\r\n\r\n\t\t\t\t\t\ttarget[ gltfAttributeName ] = cache.attributes.get( this.getUID( attribute, true ) );\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Clones attribute not to override\r\n\t\t\t\t\tconst relativeAttribute = attribute.clone();\r\n\r\n\t\t\t\t\tif ( ! geometry.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, jl = attribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tfor ( let a = 0; a < attribute.itemSize; a ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( a === 0 ) relativeAttribute.setX( j, attribute.getX( j ) - baseAttribute.getX( j ) );\r\n\t\t\t\t\t\t\t\tif ( a === 1 ) relativeAttribute.setY( j, attribute.getY( j ) - baseAttribute.getY( j ) );\r\n\t\t\t\t\t\t\t\tif ( a === 2 ) relativeAttribute.setZ( j, attribute.getZ( j ) - baseAttribute.getZ( j ) );\r\n\t\t\t\t\t\t\t\tif ( a === 3 ) relativeAttribute.setW( j, attribute.getW( j ) - baseAttribute.getW( j ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttarget[ gltfAttributeName ] = this.processAccessor( relativeAttribute, geometry );\r\n\t\t\t\t\tcache.attributes.set( this.getUID( baseAttribute, true ), target[ gltfAttributeName ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargets.push( target );\r\n\r\n\t\t\t\tweights.push( mesh.morphTargetInfluences[ i ] );\r\n\r\n\t\t\t\tif ( mesh.morphTargetDictionary !== undefined ) targetNames.push( reverseDictionary[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmeshDef.weights = weights;\r\n\r\n\t\t\tif ( targetNames.length > 0 ) {\r\n\r\n\t\t\t\tmeshDef.extras = {};\r\n\t\t\t\tmeshDef.extras.targetNames = targetNames;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst isMultiMaterial = Array.isArray( mesh.material );\r\n\r\n\t\tif ( isMultiMaterial && geometry.groups.length === 0 ) return null;\r\n\r\n\t\tconst materials = isMultiMaterial ? mesh.material : [ mesh.material ];\r\n\t\tconst groups = isMultiMaterial ? geometry.groups : [ { materialIndex: 0, start: undefined, count: undefined } ];\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst primitive = {\r\n\t\t\t\tmode: mode,\r\n\t\t\t\tattributes: attributes,\r\n\t\t\t};\r\n\r\n\t\t\tthis.serializeUserData( geometry, primitive );\r\n\r\n\t\t\tif ( targets.length > 0 ) primitive.targets = targets;\r\n\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\tlet cacheKey = this.getUID( geometry.index );\r\n\r\n\t\t\t\tif ( groups[ i ].start !== undefined || groups[ i ].count !== undefined ) {\r\n\r\n\t\t\t\t\tcacheKey += ':' + groups[ i ].start + ':' + groups[ i ].count;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cache.attributes.has( cacheKey ) ) {\r\n\r\n\t\t\t\t\tprimitive.indices = cache.attributes.get( cacheKey );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprimitive.indices = this.processAccessor( geometry.index, geometry, groups[ i ].start, groups[ i ].count );\r\n\t\t\t\t\tcache.attributes.set( cacheKey, primitive.indices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( primitive.indices === null ) delete primitive.indices;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst material = this.processMaterial( materials[ groups[ i ].materialIndex ] );\r\n\r\n\t\t\tif ( material !== null ) primitive.material = material;\r\n\r\n\t\t\tprimitives.push( primitive );\r\n\r\n\t\t}\r\n\r\n\t\tmeshDef.primitives = primitives;\r\n\r\n\t\tif ( ! json.meshes ) json.meshes = [];\r\n\r\n\t\tthis._invokeAll( function ( ext ) {\r\n\r\n\t\t\text.writeMesh && ext.writeMesh( mesh, meshDef );\r\n\r\n\t\t} );\r\n\r\n\t\tconst index = json.meshes.push( meshDef ) - 1;\r\n\t\tcache.meshes.set( meshCacheKey, index );\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process camera\r\n\t * @param  {THREE.Camera} camera Camera to process\r\n\t * @return {Integer}      Index of the processed mesh in the \"camera\" array\r\n\t */\r\n\tprocessCamera( camera ) {\r\n\r\n\t\tconst json = this.json;\r\n\r\n\t\tif ( ! json.cameras ) json.cameras = [];\r\n\r\n\t\tconst isOrtho = camera.isOrthographicCamera;\r\n\r\n\t\tconst cameraDef = {\r\n\t\t\ttype: isOrtho ? 'orthographic' : 'perspective'\r\n\t\t};\r\n\r\n\t\tif ( isOrtho ) {\r\n\r\n\t\t\tcameraDef.orthographic = {\r\n\t\t\t\txmag: camera.right * 2,\r\n\t\t\t\tymag: camera.top * 2,\r\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\r\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcameraDef.perspective = {\r\n\t\t\t\taspectRatio: camera.aspect,\r\n\t\t\t\tyfov: MathUtils.degToRad( camera.fov ),\r\n\t\t\t\tzfar: camera.far <= 0 ? 0.001 : camera.far,\r\n\t\t\t\tznear: camera.near < 0 ? 0 : camera.near\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// Question: Is saving \"type\" as name intentional?\r\n\t\tif ( camera.name !== '' ) cameraDef.name = camera.type;\r\n\r\n\t\treturn json.cameras.push( cameraDef ) - 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates glTF animation entry from AnimationClip object.\r\n\t *\r\n\t * Status:\r\n\t * - Only properties listed in PATH_PROPERTIES may be animated.\r\n\t *\r\n\t * @param {THREE.AnimationClip} clip\r\n\t * @param {THREE.Object3D} root\r\n\t * @return {number|null}\r\n\t */\r\n\tprocessAnimation( clip, root ) {\r\n\r\n\t\tconst json = this.json;\r\n\t\tconst nodeMap = this.nodeMap;\r\n\r\n\t\tif ( ! json.animations ) json.animations = [];\r\n\r\n\t\tclip = GLTFExporter.Utils.mergeMorphTargetTracks( clip.clone(), root );\r\n\r\n\t\tconst tracks = clip.tracks;\r\n\t\tconst channels = [];\r\n\t\tconst samplers = [];\r\n\r\n\t\tfor ( let i = 0; i < tracks.length; ++ i ) {\r\n\r\n\t\t\tconst track = tracks[ i ];\r\n\t\t\tconst trackBinding = PropertyBinding.parseTrackName( track.name );\r\n\t\t\tlet trackNode = PropertyBinding.findNode( root, trackBinding.nodeName );\r\n\t\t\tconst trackProperty = PATH_PROPERTIES[ trackBinding.propertyName ];\r\n\r\n\t\t\tif ( trackBinding.objectName === 'bones' ) {\r\n\r\n\t\t\t\tif ( trackNode.isSkinnedMesh === true ) {\r\n\r\n\t\t\t\t\ttrackNode = trackNode.skeleton.getBoneByName( trackBinding.objectIndex );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttrackNode = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! trackNode || ! trackProperty ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Could not export animation track \"%s\".', track.name );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst inputItemSize = 1;\r\n\t\t\tlet outputItemSize = track.values.length / track.times.length;\r\n\r\n\t\t\tif ( trackProperty === PATH_PROPERTIES.morphTargetInfluences ) {\r\n\r\n\t\t\t\toutputItemSize /= trackNode.morphTargetInfluences.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet interpolation;\r\n\r\n\t\t\t// @TODO export CubicInterpolant(InterpolateSmooth) as CUBICSPLINE\r\n\r\n\t\t\t// Detecting glTF cubic spline interpolant by checking factory method's special property\r\n\t\t\t// GLTFCubicSplineInterpolant is a custom interpolant and track doesn't return\r\n\t\t\t// valid value from .getInterpolation().\r\n\t\t\tif ( track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline === true ) {\r\n\r\n\t\t\t\tinterpolation = 'CUBICSPLINE';\r\n\r\n\t\t\t\t// itemSize of CUBICSPLINE keyframe is 9\r\n\t\t\t\t// (VEC3 * 3: inTangent, splineVertex, and outTangent)\r\n\t\t\t\t// but needs to be stored as VEC3 so dividing by 3 here.\r\n\t\t\t\toutputItemSize /= 3;\r\n\r\n\t\t\t} else if ( track.getInterpolation() === InterpolateDiscrete ) {\r\n\r\n\t\t\t\tinterpolation = 'STEP';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tinterpolation = 'LINEAR';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsamplers.push( {\r\n\t\t\t\tinput: this.processAccessor( new BufferAttribute( track.times, inputItemSize ) ),\r\n\t\t\t\toutput: this.processAccessor( new BufferAttribute( track.values, outputItemSize ) ),\r\n\t\t\t\tinterpolation: interpolation\r\n\t\t\t} );\r\n\r\n\t\t\tchannels.push( {\r\n\t\t\t\tsampler: samplers.length - 1,\r\n\t\t\t\ttarget: {\r\n\t\t\t\t\tnode: nodeMap.get( trackNode ),\r\n\t\t\t\t\tpath: trackProperty\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tjson.animations.push( {\r\n\t\t\tname: clip.name || 'clip_' + json.animations.length,\r\n\t\t\tsamplers: samplers,\r\n\t\t\tchannels: channels\r\n\t\t} );\r\n\r\n\t\treturn json.animations.length - 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @param {THREE.Object3D} object\r\n\t * @return {number|null}\r\n\t */\r\n\t processSkin( object ) {\r\n\r\n\t\tconst json = this.json;\r\n\t\tconst nodeMap = this.nodeMap;\r\n\r\n\t\tconst node = json.nodes[ nodeMap.get( object ) ];\r\n\r\n\t\tconst skeleton = object.skeleton;\r\n\r\n\t\tif ( skeleton === undefined ) return null;\r\n\r\n\t\tconst rootJoint = object.skeleton.bones[ 0 ];\r\n\r\n\t\tif ( rootJoint === undefined ) return null;\r\n\r\n\t\tconst joints = [];\r\n\t\tconst inverseBindMatrices = new Float32Array( skeleton.bones.length * 16 );\r\n\t\tconst temporaryBoneInverse = new Matrix4();\r\n\r\n\t\tfor ( let i = 0; i < skeleton.bones.length; ++ i ) {\r\n\r\n\t\t\tjoints.push( nodeMap.get( skeleton.bones[ i ] ) );\r\n\t\t\ttemporaryBoneInverse.copy( skeleton.boneInverses[ i ] );\r\n\t\t\ttemporaryBoneInverse.multiply( object.bindMatrix ).toArray( inverseBindMatrices, i * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.skins === undefined ) json.skins = [];\r\n\r\n\t\tjson.skins.push( {\r\n\t\t\tinverseBindMatrices: this.processAccessor( new BufferAttribute( inverseBindMatrices, 16 ) ),\r\n\t\t\tjoints: joints,\r\n\t\t\tskeleton: nodeMap.get( rootJoint )\r\n\t\t} );\r\n\r\n\t\tconst skinIndex = node.skin = json.skins.length - 1;\r\n\r\n\t\treturn skinIndex;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process Object3D node\r\n\t * @param  {THREE.Object3D} node Object3D to processNode\r\n\t * @return {Integer} Index of the node in the nodes list\r\n\t */\r\n\tprocessNode( object ) {\r\n\r\n\t\tconst json = this.json;\r\n\t\tconst options = this.options;\r\n\t\tconst nodeMap = this.nodeMap;\r\n\r\n\t\tif ( ! json.nodes ) json.nodes = [];\r\n\r\n\t\tconst nodeDef = {};\r\n\r\n\t\tif ( options.trs ) {\r\n\r\n\t\t\tconst rotation = object.quaternion.toArray();\r\n\t\t\tconst position = object.position.toArray();\r\n\t\t\tconst scale = object.scale.toArray();\r\n\r\n\t\t\tif ( ! equalArray( rotation, [ 0, 0, 0, 1 ] ) ) {\r\n\r\n\t\t\t\tnodeDef.rotation = rotation;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! equalArray( position, [ 0, 0, 0 ] ) ) {\r\n\r\n\t\t\t\tnodeDef.translation = position;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! equalArray( scale, [ 1, 1, 1 ] ) ) {\r\n\r\n\t\t\t\tnodeDef.scale = scale;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( object.matrixAutoUpdate ) {\r\n\r\n\t\t\t\tobject.updateMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isIdentityMatrix( object.matrix ) === false ) {\r\n\r\n\t\t\t\tnodeDef.matrix = object.matrix.elements;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// We don't export empty strings name because it represents no-name in Three.js.\r\n\t\tif ( object.name !== '' ) nodeDef.name = String( object.name );\r\n\r\n\t\tthis.serializeUserData( object, nodeDef );\r\n\r\n\t\tif ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n\t\t\tconst meshIndex = this.processMesh( object );\r\n\r\n\t\t\tif ( meshIndex !== null ) nodeDef.mesh = meshIndex;\r\n\r\n\t\t} else if ( object.isCamera ) {\r\n\r\n\t\t\tnodeDef.camera = this.processCamera( object );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isSkinnedMesh ) this.skins.push( object );\r\n\r\n\t\tif ( object.children.length > 0 ) {\r\n\r\n\t\t\tconst children = [];\r\n\r\n\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = object.children[ i ];\r\n\r\n\t\t\t\tif ( child.visible || options.onlyVisible === false ) {\r\n\r\n\t\t\t\t\tconst nodeIndex = this.processNode( child );\r\n\r\n\t\t\t\t\tif ( nodeIndex !== null ) children.push( nodeIndex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( children.length > 0 ) nodeDef.children = children;\r\n\r\n\t\t}\r\n\r\n\t\tthis._invokeAll( function ( ext ) {\r\n\r\n\t\t\text.writeNode && ext.writeNode( object, nodeDef );\r\n\r\n\t\t} );\r\n\r\n\t\tconst nodeIndex = json.nodes.push( nodeDef ) - 1;\r\n\t\tnodeMap.set( object, nodeIndex );\r\n\t\treturn nodeIndex;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process Scene\r\n\t * @param  {Scene} node Scene to process\r\n\t */\r\n\tprocessScene( scene ) {\r\n\r\n\t\tconst json = this.json;\r\n\t\tconst options = this.options;\r\n\r\n\t\tif ( ! json.scenes ) {\r\n\r\n\t\t\tjson.scenes = [];\r\n\t\t\tjson.scene = 0;\r\n\r\n\t\t}\r\n\r\n\t\tconst sceneDef = {};\r\n\r\n\t\tif ( scene.name !== '' ) sceneDef.name = scene.name;\r\n\r\n\t\tjson.scenes.push( sceneDef );\r\n\r\n\t\tconst nodes = [];\r\n\r\n\t\tfor ( let i = 0, l = scene.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = scene.children[ i ];\r\n\r\n\t\t\tif ( child.visible || options.onlyVisible === false ) {\r\n\r\n\t\t\t\tconst nodeIndex = this.processNode( child );\r\n\r\n\t\t\t\tif ( nodeIndex !== null ) nodes.push( nodeIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( nodes.length > 0 ) sceneDef.nodes = nodes;\r\n\r\n\t\tthis.serializeUserData( scene, sceneDef );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a Scene to hold a list of objects and parse it\r\n\t * @param  {Array} objects List of objects to process\r\n\t */\r\n\tprocessObjects( objects ) {\r\n\r\n\t\tconst scene = new Scene();\r\n\t\tscene.name = 'AuxScene';\r\n\r\n\t\tfor ( let i = 0; i < objects.length; i ++ ) {\r\n\r\n\t\t\t// We push directly to children instead of calling `add` to prevent\r\n\t\t\t// modify the .parent and break its original scene and hierarchy\r\n\t\t\tscene.children.push( objects[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis.processScene( scene );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @param {THREE.Object3D|Array<THREE.Object3D>} input\r\n\t */\r\n\tprocessInput( input ) {\r\n\r\n\t\tconst options = this.options;\r\n\r\n\t\tinput = input instanceof Array ? input : [ input ];\r\n\r\n\t\tthis._invokeAll( function ( ext ) {\r\n\r\n\t\t\text.beforeParse && ext.beforeParse( input );\r\n\r\n\t\t} );\r\n\r\n\t\tconst objectsWithoutScene = [];\r\n\r\n\t\tfor ( let i = 0; i < input.length; i ++ ) {\r\n\r\n\t\t\tif ( input[ i ] instanceof Scene ) {\r\n\r\n\t\t\t\tthis.processScene( input[ i ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tobjectsWithoutScene.push( input[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( objectsWithoutScene.length > 0 ) this.processObjects( objectsWithoutScene );\r\n\r\n\t\tfor ( let i = 0; i < this.skins.length; ++ i ) {\r\n\r\n\t\t\tthis.processSkin( this.skins[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < options.animations.length; ++ i ) {\r\n\r\n\t\t\tthis.processAnimation( options.animations[ i ], input[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis._invokeAll( function ( ext ) {\r\n\r\n\t\t\text.afterParse && ext.afterParse( input );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t_invokeAll( func ) {\r\n\r\n\t\tfor ( let i = 0, il = this.plugins.length; i < il; i ++ ) {\r\n\r\n\t\t\tfunc( this.plugins[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Punctual Lights Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\r\n */\r\nclass GLTFLightExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'KHR_lights_punctual';\r\n\r\n\t}\r\n\r\n\twriteNode( light, nodeDef ) {\r\n\r\n\t\tif ( ! light.isLight ) return;\r\n\r\n\t\tif ( ! light.isDirectionalLight && ! light.isPointLight && ! light.isSpotLight ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Only directional, point, and spot lights are supported.', light );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst json = writer.json;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\tconst lightDef = {};\r\n\r\n\t\tif ( light.name ) lightDef.name = light.name;\r\n\r\n\t\tlightDef.color = light.color.toArray();\r\n\r\n\t\tlightDef.intensity = light.intensity;\r\n\r\n\t\tif ( light.isDirectionalLight ) {\r\n\r\n\t\t\tlightDef.type = 'directional';\r\n\r\n\t\t} else if ( light.isPointLight ) {\r\n\r\n\t\t\tlightDef.type = 'point';\r\n\r\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\r\n\r\n\t\t} else if ( light.isSpotLight ) {\r\n\r\n\t\t\tlightDef.type = 'spot';\r\n\r\n\t\t\tif ( light.distance > 0 ) lightDef.range = light.distance;\r\n\r\n\t\t\tlightDef.spot = {};\r\n\t\t\tlightDef.spot.innerConeAngle = ( light.penumbra - 1.0 ) * light.angle * - 1.0;\r\n\t\t\tlightDef.spot.outerConeAngle = light.angle;\r\n\r\n\t\t}\r\n\r\n\t\tif ( light.decay !== undefined && light.decay !== 2 ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light decay may be lost. glTF is physically-based, '\r\n\t\t\t\t+ 'and expects light.decay=2.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( light.target\r\n\t\t\t\t&& ( light.target.parent !== light\r\n\t\t\t\t|| light.target.position.x !== 0\r\n\t\t\t\t|| light.target.position.y !== 0\r\n\t\t\t\t|| light.target.position.z !== - 1 ) ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.GLTFExporter: Light direction may be lost. For best results, '\r\n\t\t\t\t+ 'make light.target a child of the light with position 0,0,-1.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! extensionsUsed[ this.name ] ) {\r\n\r\n\t\t\tjson.extensions = json.extensions || {};\r\n\t\t\tjson.extensions[ this.name ] = { lights: [] };\r\n\t\t\textensionsUsed[ this.name ] = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst lights = json.extensions[ this.name ].lights;\r\n\t\tlights.push( lightDef );\r\n\r\n\t\tnodeDef.extensions = nodeDef.extensions || {};\r\n\t\tnodeDef.extensions[ this.name ] = { light: lights.length - 1 };\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Unlit Materials Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\r\n */\r\nclass GLTFMaterialsUnlitExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'KHR_materials_unlit';\r\n\r\n\t}\r\n\r\n\twriteMaterial( material, materialDef ) {\r\n\r\n\t\tif ( ! material.isMeshBasicMaterial ) return;\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\tmaterialDef.extensions = materialDef.extensions || {};\r\n\t\tmaterialDef.extensions[ this.name ] = {};\r\n\r\n\t\textensionsUsed[ this.name ] = true;\r\n\r\n\t\tmaterialDef.pbrMetallicRoughness.metallicFactor = 0.0;\r\n\t\tmaterialDef.pbrMetallicRoughness.roughnessFactor = 0.9;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Clearcoat Materials Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\r\n */\r\nclass GLTFMaterialsClearcoatExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'KHR_materials_clearcoat';\r\n\r\n\t}\r\n\r\n\twriteMaterial( material, materialDef ) {\r\n\r\n\t\tif ( ! material.isMeshPhysicalMaterial ) return;\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\tconst extensionDef = {};\r\n\r\n\t\textensionDef.clearcoatFactor = material.clearcoat;\r\n\r\n\t\tif ( material.clearcoatMap ) {\r\n\r\n\t\t\tconst clearcoatMapDef = { index: writer.processTexture( material.clearcoatMap ) };\r\n\t\t\twriter.applyTextureTransform( clearcoatMapDef, material.clearcoatMap );\r\n\t\t\textensionDef.clearcoatTexture = clearcoatMapDef;\r\n\r\n\t\t}\r\n\r\n\t\textensionDef.clearcoatRoughnessFactor = material.clearcoatRoughness;\r\n\r\n\t\tif ( material.clearcoatRoughnessMap ) {\r\n\r\n\t\t\tconst clearcoatRoughnessMapDef = { index: writer.processTexture( material.clearcoatRoughnessMap ) };\r\n\t\t\twriter.applyTextureTransform( clearcoatRoughnessMapDef, material.clearcoatRoughnessMap );\r\n\t\t\textensionDef.clearcoatRoughnessTexture = clearcoatRoughnessMapDef;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.clearcoatNormalMap ) {\r\n\r\n\t\t\tconst clearcoatNormalMapDef = { index: writer.processTexture( material.clearcoatNormalMap ) };\r\n\t\t\twriter.applyTextureTransform( clearcoatNormalMapDef, material.clearcoatNormalMap );\r\n\t\t\textensionDef.clearcoatNormalTexture = clearcoatNormalMapDef;\r\n\r\n\t\t}\r\n\r\n\t\tmaterialDef.extensions = materialDef.extensions || {};\r\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\r\n\r\n\t\textensionsUsed[ this.name ] = true;\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Iridescence Materials Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\r\n */\r\nclass GLTFMaterialsIridescenceExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'KHR_materials_iridescence';\r\n\r\n\t}\r\n\r\n\twriteMaterial( material, materialDef ) {\r\n\r\n\t\tif ( ! material.isMeshPhysicalMaterial ) return;\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\tconst extensionDef = {};\r\n\r\n\t\textensionDef.iridescenceFactor = material.iridescence;\r\n\r\n\t\tif ( material.iridescenceMap ) {\r\n\r\n\t\t\tconst iridescenceMapDef = { index: writer.processTexture( material.iridescenceMap ) };\r\n\t\t\twriter.applyTextureTransform( iridescenceMapDef, material.iridescenceMap );\r\n\t\t\textensionDef.iridescenceTexture = iridescenceMapDef;\r\n\r\n\t\t}\r\n\r\n\t\textensionDef.iridescenceIor = material.iridescenceIOR;\r\n\t\textensionDef.iridescenceThicknessMinimum = material.iridescenceThicknessRange[ 0 ];\r\n\t\textensionDef.iridescenceThicknessMaximum = material.iridescenceThicknessRange[ 1 ];\r\n\r\n\t\tif ( material.iridescenceThicknessMap ) {\r\n\r\n\t\t\tconst iridescenceThicknessMapDef = { index: writer.processTexture( material.iridescenceThicknessMap ) };\r\n\t\t\twriter.applyTextureTransform( iridescenceThicknessMapDef, material.iridescenceThicknessMap );\r\n\t\t\textensionDef.iridescenceThicknessTexture = iridescenceThicknessMapDef;\r\n\r\n\t\t}\r\n\r\n\t\tmaterialDef.extensions = materialDef.extensions || {};\r\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\r\n\r\n\t\textensionsUsed[ this.name ] = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Transmission Materials Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\r\n */\r\nclass GLTFMaterialsTransmissionExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'KHR_materials_transmission';\r\n\r\n\t}\r\n\r\n\twriteMaterial( material, materialDef ) {\r\n\r\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\tconst extensionDef = {};\r\n\r\n\t\textensionDef.transmissionFactor = material.transmission;\r\n\r\n\t\tif ( material.transmissionMap ) {\r\n\r\n\t\t\tconst transmissionMapDef = { index: writer.processTexture( material.transmissionMap ) };\r\n\t\t\twriter.applyTextureTransform( transmissionMapDef, material.transmissionMap );\r\n\t\t\textensionDef.transmissionTexture = transmissionMapDef;\r\n\r\n\t\t}\r\n\r\n\t\tmaterialDef.extensions = materialDef.extensions || {};\r\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\r\n\r\n\t\textensionsUsed[ this.name ] = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Materials Volume Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\r\n */\r\nclass GLTFMaterialsVolumeExtension {\r\n\r\n\tconstructor( writer ) {\r\n\r\n\t\tthis.writer = writer;\r\n\t\tthis.name = 'KHR_materials_volume';\r\n\r\n\t}\r\n\r\n\twriteMaterial( material, materialDef ) {\r\n\r\n\t\tif ( ! material.isMeshPhysicalMaterial || material.transmission === 0 ) return;\r\n\r\n\t\tconst writer = this.writer;\r\n\t\tconst extensionsUsed = writer.extensionsUsed;\r\n\r\n\t\tconst extensionDef = {};\r\n\r\n\t\textensionDef.thicknessFactor = material.thickness;\r\n\r\n\t\tif ( material.thicknessMap ) {\r\n\r\n\t\t\tconst thicknessMapDef = { index: writer.processTexture( material.thicknessMap ) };\r\n\t\t\twriter.applyTextureTransform( thicknessMapDef, material.thicknessMap );\r\n\t\t\textensionDef.thicknessTexture = thicknessMapDef;\r\n\r\n\t\t}\r\n\r\n\t\textensionDef.attenuationDistance = material.attenuationDistance;\r\n\t\textensionDef.attenuationColor = material.attenuationColor.toArray();\r\n\r\n\t\tmaterialDef.extensions = materialDef.extensions || {};\r\n\t\tmaterialDef.extensions[ this.name ] = extensionDef;\r\n\r\n\t\textensionsUsed[ this.name ] = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Static utility functions\r\n */\r\nGLTFExporter.Utils = {\r\n\r\n\tinsertKeyframe: function ( track, time ) {\r\n\r\n\t\tconst tolerance = 0.001; // 1ms\r\n\t\tconst valueSize = track.getValueSize();\r\n\r\n\t\tconst times = new track.TimeBufferType( track.times.length + 1 );\r\n\t\tconst values = new track.ValueBufferType( track.values.length + valueSize );\r\n\t\tconst interpolant = track.createInterpolant( new track.ValueBufferType( valueSize ) );\r\n\r\n\t\tlet index;\r\n\r\n\t\tif ( track.times.length === 0 ) {\r\n\r\n\t\t\ttimes[ 0 ] = time;\r\n\r\n\t\t\tfor ( let i = 0; i < valueSize; i ++ ) {\r\n\r\n\t\t\t\tvalues[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t} else if ( time < track.times[ 0 ] ) {\r\n\r\n\t\t\tif ( Math.abs( track.times[ 0 ] - time ) < tolerance ) return 0;\r\n\r\n\t\t\ttimes[ 0 ] = time;\r\n\t\t\ttimes.set( track.times, 1 );\r\n\r\n\t\t\tvalues.set( interpolant.evaluate( time ), 0 );\r\n\t\t\tvalues.set( track.values, valueSize );\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t} else if ( time > track.times[ track.times.length - 1 ] ) {\r\n\r\n\t\t\tif ( Math.abs( track.times[ track.times.length - 1 ] - time ) < tolerance ) {\r\n\r\n\t\t\t\treturn track.times.length - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttimes[ times.length - 1 ] = time;\r\n\t\t\ttimes.set( track.times, 0 );\r\n\r\n\t\t\tvalues.set( track.values, 0 );\r\n\t\t\tvalues.set( interpolant.evaluate( time ), track.values.length );\r\n\r\n\t\t\tindex = times.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0; i < track.times.length; i ++ ) {\r\n\r\n\t\t\t\tif ( Math.abs( track.times[ i ] - time ) < tolerance ) return i;\r\n\r\n\t\t\t\tif ( track.times[ i ] < time && track.times[ i + 1 ] > time ) {\r\n\r\n\t\t\t\t\ttimes.set( track.times.slice( 0, i + 1 ), 0 );\r\n\t\t\t\t\ttimes[ i + 1 ] = time;\r\n\t\t\t\t\ttimes.set( track.times.slice( i + 1 ), i + 2 );\r\n\r\n\t\t\t\t\tvalues.set( track.values.slice( 0, ( i + 1 ) * valueSize ), 0 );\r\n\t\t\t\t\tvalues.set( interpolant.evaluate( time ), ( i + 1 ) * valueSize );\r\n\t\t\t\t\tvalues.set( track.values.slice( ( i + 1 ) * valueSize ), ( i + 2 ) * valueSize );\r\n\r\n\t\t\t\t\tindex = i + 1;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttrack.times = times;\r\n\t\ttrack.values = values;\r\n\r\n\t\treturn index;\r\n\r\n\t},\r\n\r\n\tmergeMorphTargetTracks: function ( clip, root ) {\r\n\r\n\t\tconst tracks = [];\r\n\t\tconst mergedTracks = {};\r\n\t\tconst sourceTracks = clip.tracks;\r\n\r\n\t\tfor ( let i = 0; i < sourceTracks.length; ++ i ) {\r\n\r\n\t\t\tlet sourceTrack = sourceTracks[ i ];\r\n\t\t\tconst sourceTrackBinding = PropertyBinding.parseTrackName( sourceTrack.name );\r\n\t\t\tconst sourceTrackNode = PropertyBinding.findNode( root, sourceTrackBinding.nodeName );\r\n\r\n\t\t\tif ( sourceTrackBinding.propertyName !== 'morphTargetInfluences' || sourceTrackBinding.propertyIndex === undefined ) {\r\n\r\n\t\t\t\t// Tracks that don't affect morph targets, or that affect all morph targets together, can be left as-is.\r\n\t\t\t\ttracks.push( sourceTrack );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodDiscrete\r\n\t\t\t\t&& sourceTrack.createInterpolant !== sourceTrack.InterpolantFactoryMethodLinear ) {\r\n\r\n\t\t\t\tif ( sourceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n\r\n\t\t\t\t\t// This should never happen, because glTF morph target animations\r\n\t\t\t\t\t// affect all targets already.\r\n\t\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Cannot merge tracks with glTF CUBICSPLINE interpolation.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn( 'THREE.GLTFExporter: Morph target interpolation mode not yet supported. Using LINEAR instead.' );\r\n\r\n\t\t\t\tsourceTrack = sourceTrack.clone();\r\n\t\t\t\tsourceTrack.setInterpolation( InterpolateLinear );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst targetCount = sourceTrackNode.morphTargetInfluences.length;\r\n\t\t\tconst targetIndex = sourceTrackNode.morphTargetDictionary[ sourceTrackBinding.propertyIndex ];\r\n\r\n\t\t\tif ( targetIndex === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.GLTFExporter: Morph target name not found: ' + sourceTrackBinding.propertyIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet mergedTrack;\r\n\r\n\t\t\t// If this is the first time we've seen this object, create a new\r\n\t\t\t// track to store merged keyframe data for each morph target.\r\n\t\t\tif ( mergedTracks[ sourceTrackNode.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmergedTrack = sourceTrack.clone();\r\n\r\n\t\t\t\tconst values = new mergedTrack.ValueBufferType( targetCount * mergedTrack.times.length );\r\n\r\n\t\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\r\n\r\n\t\t\t\t\tvalues[ j * targetCount + targetIndex ] = mergedTrack.values[ j ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We need to take into consideration the intended target node\r\n\t\t\t\t// of our original un-merged morphTarget animation.\r\n\t\t\t\tmergedTrack.name = ( sourceTrackBinding.nodeName || '' ) + '.morphTargetInfluences';\r\n\t\t\t\tmergedTrack.values = values;\r\n\r\n\t\t\t\tmergedTracks[ sourceTrackNode.uuid ] = mergedTrack;\r\n\t\t\t\ttracks.push( mergedTrack );\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst sourceInterpolant = sourceTrack.createInterpolant( new sourceTrack.ValueBufferType( 1 ) );\r\n\r\n\t\t\tmergedTrack = mergedTracks[ sourceTrackNode.uuid ];\r\n\r\n\t\t\t// For every existing keyframe of the merged track, write a (possibly\r\n\t\t\t// interpolated) value from the source track.\r\n\t\t\tfor ( let j = 0; j < mergedTrack.times.length; j ++ ) {\r\n\r\n\t\t\t\tmergedTrack.values[ j * targetCount + targetIndex ] = sourceInterpolant.evaluate( mergedTrack.times[ j ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// For every existing keyframe of the source track, write a (possibly\r\n\t\t\t// new) keyframe to the merged track. Values from the previous loop may\r\n\t\t\t// be written again, but keyframes are de-duplicated.\r\n\t\t\tfor ( let j = 0; j < sourceTrack.times.length; j ++ ) {\r\n\r\n\t\t\t\tconst keyframeIndex = this.insertKeyframe( mergedTrack, sourceTrack.times[ j ] );\r\n\t\t\t\tmergedTrack.values[ keyframeIndex * targetCount + targetIndex ] = sourceTrack.values[ j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tclip.tracks = tracks;\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n};\r\n\r\nexport { GLTFExporter };\r\n"],"names":["require","BufferAttribute","ClampToEdgeWrapping","DoubleSide","InterpolateDiscrete","InterpolateLinear","LinearEncoding","LinearFilter","LinearMipmapLinearFilter","LinearMipmapNearestFilter","MathUtils","Matrix4","MirroredRepeatWrapping","NearestFilter","NearestMipmapLinearFilter","NearestMipmapNearestFilter","PropertyBinding","RGBAFormat","RepeatWrapping","Scene","Source","sRGBEncoding","Vector3","GLTFExporter","pluginCallbacks","register","writer","GLTFLightExtension","GLTFMaterialsUnlitExtension","GLTFMaterialsTransmissionExtension","GLTFMaterialsVolumeExtension","GLTFMaterialsClearcoatExtension","GLTFMaterialsIridescenceExtension","callback","indexOf","push","splice","input","onDone","onError","options","GLTFWriter","plugins","i","il","length","setPlugins","write","scope","Promise","resolve","reject","parse","WEBGL_CONSTANTS","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","FLOAT","UNSIGNED_INT","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","NEAREST","LINEAR","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","CLAMP_TO_EDGE","MIRRORED_REPEAT","REPEAT","THREE_TO_WEBGL","PATH_PROPERTIES","scale","position","quaternion","morphTargetInfluences","GLB_HEADER_BYTES","GLB_HEADER_MAGIC","GLB_VERSION","GLB_CHUNK_PREFIX_BYTES","GLB_CHUNK_TYPE_JSON","GLB_CHUNK_TYPE_BIN","equalArray","array1","array2","every","element","index","stringToArrayBuffer","text","TextEncoder","encode","buffer","isIdentityMatrix","matrix","elements","getMinMax","attribute","start","count","output","min","Array","itemSize","fill","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","a","value","array","getX","getY","getZ","getW","normalized","normalize","Math","getPaddedBufferSize","bufferSize","ceil","getPaddedArrayBuffer","arrayBuffer","paddingByte","paddedLength","byteLength","Uint8Array","set","getCanvas","document","OffscreenCanvas","createElement","getToBlobPromise","canvas","mimeType","toBlob","undefined","quality","convertToBlob","type","pending","buffers","byteOffset","nodeMap","Map","skins","extensionsUsed","uids","uid","json","asset","version","generator","cache","meshes","attributes","attributesNormalized","materials","textures","images","Object","assign","binary","trs","onlyVisible","maxTextureSize","Infinity","animations","includeCustomExtensions","processInput","all","blob","Blob","extensionsUsedList","keys","size","reader","FileReader","readAsArrayBuffer","onloadend","binaryChunk","result","binaryChunkPrefix","DataView","ArrayBuffer","setUint32","jsonChunk","JSON","stringify","jsonChunkPrefix","header","headerView","totalByteLength","glbBlob","glbReader","readAsDataURL","base64data","uri","object","objectDef","userData","gltfExtensions","extensions","extensionName","extras","error","console","warn","name","message","isRelativeCopy","has","get","normal","v","abs","fromBufferAttribute","clone","x","y","z","setX","setXYZ","mapDef","texture","didTransform","transformDef","offset","toArray","rotation","repeat","metalnessMap","roughnessMap","getEncodingConversion","map","encoding","SRGBToLinear","c","pow","LinearToLinear","metalness","image","roughness","width","height","context","getContext","fillStyle","fillRect","composite","getImageData","drawImage","convert","data","putImageData","reference","source","componentType","target","bufferViews","componentSize","dataView","setFloat32","setUint16","setUint8","bufferViewDef","processBuffer","byteStride","id","geometry","types","constructor","Float32Array","Uint32Array","Uint16Array","Error","minMax","bufferViewTarget","bufferView","processBufferView","accessorDef","accessors","format","flipY","cachedImages","key","toString","imageDef","ctx","translate","Uint8ClampedArray","ImageData","then","processBufferViewImage","bufferViewIndex","toDataURL","dataURL","samplers","samplerDef","magFilter","minFilter","wrapS","wrapT","textureDef","sampler","processSampler","processImage","_invokeAll","ext","writeTexture","material","isShaderMaterial","materialDef","pbrMetallicRoughness","isMeshStandardMaterial","isMeshBasicMaterial","color","concat","opacity","baseColorFactor","metallicFactor","roughnessFactor","metalRoughTexture","buildMetalRoughTexture","metalRoughMapDef","processTexture","applyTextureTransform","metallicRoughnessTexture","baseColorMapDef","baseColorTexture","emissive","multiplyScalar","emissiveIntensity","maxEmissiveComponent","r","g","b","emissiveFactor","emissiveMap","emissiveMapDef","emissiveTexture","normalMap","normalMapDef","normalScale","normalTexture","aoMap","occlusionMapDef","texCoord","aoMapIntensity","strength","occlusionTexture","transparent","alphaMode","alphaTest","alphaCutoff","side","doubleSided","serializeUserData","writeMaterial","mesh","meshCacheKeyParts","uuid","isArray","l","meshCacheKey","join","mode","isLineSegments","isLineLoop","isLine","isPoints","wireframe","meshDef","primitives","targets","nameConversion","uv","uv2","skinWeight","skinIndex","originalNormal","getAttribute","isNormalizedNormalAttribute","setAttribute","createNormalizedNormalAttribute","modifiedAttribute","attributeName","slice","toUpperCase","validVertexAttributes","test","getUID","accessor","processAccessor","weights","targetNames","reverseDictionary","morphTargetDictionary","warned","morphAttributes","gltfAttributeName","baseAttribute","relativeAttribute","morphTargetsRelative","j","jl","setY","setZ","setW","isMultiMaterial","groups","materialIndex","primitive","cacheKey","indices","processMaterial","writeMesh","camera","cameras","isOrtho","isOrthographicCamera","cameraDef","orthographic","xmag","right","ymag","top","zfar","far","znear","near","perspective","aspectRatio","aspect","yfov","degToRad","fov","clip","root","Utils","mergeMorphTargetTracks","tracks","channels","track","trackBinding","parseTrackName","trackNode","findNode","nodeName","trackProperty","propertyName","objectName","isSkinnedMesh","skeleton","getBoneByName","objectIndex","inputItemSize","outputItemSize","values","times","interpolation","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","getInterpolation","node","path","nodes","rootJoint","bones","joints","inverseBindMatrices","temporaryBoneInverse","copy","boneInverses","multiply","bindMatrix","skin","nodeDef","translation","matrixAutoUpdate","updateMatrix","String","isMesh","meshIndex","processMesh","isCamera","processCamera","children","child","visible","nodeIndex","processNode","writeNode","scene","scenes","sceneDef","objects","processScene","beforeParse","objectsWithoutScene","processObjects","processSkin","processAnimation","afterParse","func","light","isLight","isDirectionalLight","isPointLight","isSpotLight","lightDef","intensity","distance","range","spot","innerConeAngle","penumbra","angle","outerConeAngle","decay","parent","lights","isMeshPhysicalMaterial","extensionDef","clearcoatFactor","clearcoat","clearcoatMap","clearcoatMapDef","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughness","clearcoatRoughnessMap","clearcoatRoughnessMapDef","clearcoatRoughnessTexture","clearcoatNormalMap","clearcoatNormalMapDef","clearcoatNormalTexture","iridescenceFactor","iridescence","iridescenceMap","iridescenceMapDef","iridescenceTexture","iridescenceIor","iridescenceIOR","iridescenceThicknessMinimum","iridescenceThicknessRange","iridescenceThicknessMaximum","iridescenceThicknessMap","iridescenceThicknessMapDef","iridescenceThicknessTexture","transmission","transmissionFactor","transmissionMap","transmissionMapDef","transmissionTexture","thicknessFactor","thickness","thicknessMap","thicknessMapDef","thicknessTexture","attenuationDistance","attenuationColor","insertKeyframe","time","tolerance","valueSize","getValueSize","TimeBufferType","ValueBufferType","interpolant","evaluate","mergedTracks","sourceTracks","sourceTrack","sourceTrackBinding","sourceTrackNode","propertyIndex","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","setInterpolation","targetCount","targetIndex","mergedTrack","sourceInterpolant","keyframeIndex"],"sourceRoot":""}