{"version":3,"file":"js_libs_PLYLoader_js.js","mappings":"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","sources":["webpack:///./js/libs/PLYLoader.js"],"sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tColor\r\n} from '../../../js/three.js';\r\n\r\n/**\r\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\r\n * File Format or the Stanford Triangle Format).\r\n *\r\n * Limitations: ASCII decoding assumes file is UTF-8.\r\n *\r\n * Usage:\r\n *\tconst loader = new PLYLoader();\r\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\r\n *\r\n *\t\tscene.add( new THREE.Mesh( geometry ) );\r\n *\r\n *\t} );\r\n *\r\n * If the PLY file uses non standard property names, they can be mapped while\r\n * loading. For example, the following maps the properties\r\n * “diffuse_(red|green|blue)” in the file to standard color names.\r\n *\r\n * loader.setPropertyNameMapping( {\r\n *\tdiffuse_red: 'red',\r\n *\tdiffuse_green: 'green',\r\n *\tdiffuse_blue: 'blue'\r\n * } );\r\n *\r\n * Custom properties outside of the defaults for position, uv, normal\r\n * and color attributes can be added using the setCustomPropertyMapping method.\r\n * For example, the following maps the element properties “custom_property_a”\r\n * and “custom_property_b” to an attribute “customAttribute” with an item size of 2.\r\n * Attribute item sizes are set from the number of element properties in the property array.\r\n *\r\n * loader.setCustomPropertyMapping( {\r\n *\tcustomAttribute: ['custom_property_a', 'custom_property_b'],\r\n * } );\r\n *\r\n */\r\n\r\nconst _color = new Color();\r\n\r\nclass PLYLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.propertyNameMapping = {};\r\n\t\tthis.customPropertyMapping = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tsetPropertyNameMapping( mapping ) {\r\n\r\n\t\tthis.propertyNameMapping = mapping;\r\n\r\n\t}\r\n\r\n\tsetCustomPropertyNameMapping( mapping ) {\r\n\r\n\t\tthis.customPropertyMapping = mapping;\r\n\r\n\t}\r\n\r\n\tparse( data ) {\r\n\r\n\t\tfunction parseHeader( data ) {\r\n\r\n\t\t\tconst patternHeader = /^ply([\\s\\S]*)end_header(\\r\\n|\\r|\\n)/;\r\n\t\t\tlet headerText = '';\r\n\t\t\tlet headerLength = 0;\r\n\t\t\tconst result = patternHeader.exec( data );\r\n\r\n\t\t\tif ( result !== null ) {\r\n\r\n\t\t\t\theaderText = result[ 1 ];\r\n\t\t\t\theaderLength = new Blob( [ result[ 0 ] ] ).size;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst header = {\r\n\t\t\t\tcomments: [],\r\n\t\t\t\telements: [],\r\n\t\t\t\theaderLength: headerLength,\r\n\t\t\t\tobjInfo: ''\r\n\t\t\t};\r\n\r\n\t\t\tconst lines = headerText.split( /\\r\\n|\\r|\\n/ );\r\n\t\t\tlet currentElement;\r\n\r\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\r\n\r\n\t\t\t\tconst property = { type: propertValues[ 0 ] };\r\n\r\n\t\t\t\tif ( property.type === 'list' ) {\r\n\r\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\r\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\r\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( property.name in propertyNameMapping ) {\r\n\r\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn property;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\t\tlet line = lines[ i ];\r\n\t\t\t\tline = line.trim();\r\n\r\n\t\t\t\tif ( line === '' ) continue;\r\n\r\n\t\t\t\tconst lineValues = line.split( /\\s+/ );\r\n\t\t\t\tconst lineType = lineValues.shift();\r\n\t\t\t\tline = lineValues.join( ' ' );\r\n\r\n\t\t\t\tswitch ( lineType ) {\r\n\r\n\t\t\t\t\tcase 'format':\r\n\r\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\r\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'comment':\r\n\r\n\t\t\t\t\t\theader.comments.push( line );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'element':\r\n\r\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\r\n\r\n\t\t\t\t\t\t\theader.elements.push( currentElement );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentElement = {};\r\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\r\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\r\n\t\t\t\t\t\tcurrentElement.properties = [];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'property':\r\n\r\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'obj_info':\r\n\r\n\t\t\t\t\t\theader.objInfo = line;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentElement !== undefined ) {\r\n\r\n\t\t\t\theader.elements.push( currentElement );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn header;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCIINumber( n, type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\r\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\r\n\r\n\t\t\t\t\treturn parseInt( n );\r\n\r\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\r\n\r\n\t\t\t\t\treturn parseFloat( n );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCIIElement( properties, line ) {\r\n\r\n\t\t\tconst values = line.split( /\\s+/ );\r\n\r\n\t\t\tconst element = {};\r\n\r\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\r\n\r\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\r\n\r\n\t\t\t\t\tconst list = [];\r\n\t\t\t\t\tconst n = parseASCIINumber( values.shift(), properties[ i ].countType );\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = list;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn element;\r\n\r\n\t\t}\r\n\r\n\t\tfunction createBuffer() {\r\n\r\n\t\t\tconst buffer = {\r\n\t\t\t  indices: [],\r\n\t\t\t  vertices: [],\r\n\t\t\t  normals: [],\r\n\t\t\t  uvs: [],\r\n\t\t\t  faceVertexUvs: [],\r\n\t\t\t  colors: [],\r\n\t\t\t};\r\n\r\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\r\n\r\n\t\t\t  buffer[ customProperty ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCII( data, header ) {\r\n\r\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\r\n\r\n\t\t\tconst buffer = createBuffer();\r\n\r\n\t\t\tlet result;\r\n\r\n\t\t\tconst patternBody = /end_header\\s([\\s\\S]*)$/;\r\n\t\t\tlet body = '';\r\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\r\n\r\n\t\t\t\tbody = result[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst lines = body.split( /\\r\\n|\\r|\\n/ );\r\n\t\t\tlet currentElement = 0;\r\n\t\t\tlet currentElementCount = 0;\r\n\r\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\t\tlet line = lines[ i ];\r\n\t\t\t\tline = line.trim();\r\n\t\t\t\tif ( line === '' ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( currentElementCount >= header.elements[ currentElement ].count ) {\r\n\r\n\t\t\t\t\tcurrentElement ++;\r\n\t\t\t\t\tcurrentElementCount = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst element = parseASCIIElement( header.elements[ currentElement ].properties, line );\r\n\r\n\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\r\n\r\n\t\t\t\tcurrentElementCount ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn postProcess( buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction postProcess( buffer ) {\r\n\r\n\t\t\tlet geometry = new BufferGeometry();\r\n\r\n\t\t\t// mandatory buffer data\r\n\r\n\t\t\tif ( buffer.indices.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setIndex( buffer.indices );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\r\n\r\n\t\t\t// optional buffer data\r\n\r\n\t\t\tif ( buffer.normals.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.uvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.colors.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometry = geometry.toNonIndexed();\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// custom buffer data\r\n\r\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\r\n\r\n\t\t\t\tif ( buffer[ customProperty ].length > 0 ) {\r\n\r\n\t\t\t\t  \tgeometry.setAttribute(\r\n\t\t\t\t\t\tcustomProperty,\r\n\t\t\t\t\t\tnew Float32BufferAttribute(\r\n\t\t\t\t\t  \t\tbuffer[ customProperty ],\r\n\t\t\t\t\t  \t\tscope.customPropertyMapping[ customProperty ].length\r\n\t\t\t\t\t\t)\r\n\t\t\t\t  \t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleElement( buffer, elementName, element ) {\r\n\r\n\t\t\tfunction findAttrName( names ) {\r\n\r\n\t\t\t\tfor ( let i = 0, l = names.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst name = names[ i ];\r\n\r\n\t\t\t\t\tif ( name in element ) return name;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst attrX = findAttrName( [ 'x', 'px', 'posx' ] ) || 'x';\r\n\t\t\tconst attrY = findAttrName( [ 'y', 'py', 'posy' ] ) || 'y';\r\n\t\t\tconst attrZ = findAttrName( [ 'z', 'pz', 'posz' ] ) || 'z';\r\n\t\t\tconst attrNX = findAttrName( [ 'nx', 'normalx' ] );\r\n\t\t\tconst attrNY = findAttrName( [ 'ny', 'normaly' ] );\r\n\t\t\tconst attrNZ = findAttrName( [ 'nz', 'normalz' ] );\r\n\t\t\tconst attrS = findAttrName( [ 's', 'u', 'texture_u', 'tx' ] );\r\n\t\t\tconst attrT = findAttrName( [ 't', 'v', 'texture_v', 'ty' ] );\r\n\t\t\tconst attrR = findAttrName( [ 'red', 'diffuse_red', 'r', 'diffuse_r' ] );\r\n\t\t\tconst attrG = findAttrName( [ 'green', 'diffuse_green', 'g', 'diffuse_g' ] );\r\n\t\t\tconst attrB = findAttrName( [ 'blue', 'diffuse_blue', 'b', 'diffuse_b' ] );\r\n\r\n\t\t\tif ( elementName === 'vertex' ) {\r\n\r\n\t\t\t\tbuffer.vertices.push( element[ attrX ], element[ attrY ], element[ attrZ ] );\r\n\r\n\t\t\t\tif ( attrNX !== null && attrNY !== null && attrNZ !== null ) {\r\n\r\n\t\t\t\t\tbuffer.normals.push( element[ attrNX ], element[ attrNY ], element[ attrNZ ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( attrS !== null && attrT !== null ) {\r\n\r\n\t\t\t\t\tbuffer.uvs.push( element[ attrS ], element[ attrT ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( attrR !== null && attrG !== null && attrB !== null ) {\r\n\r\n\t\t\t\t\t_color.setRGB(\r\n\t\t\t\t\t\telement[ attrR ] / 255.0,\r\n\t\t\t\t\t\telement[ attrG ] / 255.0,\r\n\t\t\t\t\t\telement[ attrB ] / 255.0\r\n\t\t\t\t\t).convertSRGBToLinear();\r\n\r\n\t\t\t\t\tbuffer.colors.push( _color.r, _color.g, _color.b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\r\n\r\n\t\t\t\t\tfor ( const elementProperty of scope.customPropertyMapping[ customProperty ] ) {\r\n\r\n\t\t\t\t\t  buffer[ customProperty ].push( element[ elementProperty ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( elementName === 'face' ) {\r\n\r\n\t\t\t\tconst vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\r\n\t\t\t\tconst texcoord = element.texcoord;\r\n\r\n\t\t\t\tif ( vertex_indices.length === 3 ) {\r\n\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\r\n\r\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\r\n\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\r\n\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction binaryRead( dataview, at, type, little_endian ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t// corespondences for non-specific length types here match rply:\r\n\t\t\t\tcase 'int8':\t\tcase 'char':\t return [ dataview.getInt8( at ), 1 ];\r\n\t\t\t\tcase 'uint8':\t\tcase 'uchar':\t return [ dataview.getUint8( at ), 1 ];\r\n\t\t\t\tcase 'int16':\t\tcase 'short':\t return [ dataview.getInt16( at, little_endian ), 2 ];\r\n\t\t\t\tcase 'uint16':\tcase 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\r\n\t\t\t\tcase 'int32':\t\tcase 'int':\t\t return [ dataview.getInt32( at, little_endian ), 4 ];\r\n\t\t\t\tcase 'uint32':\tcase 'uint':\t return [ dataview.getUint32( at, little_endian ), 4 ];\r\n\t\t\t\tcase 'float32': case 'float':\t return [ dataview.getFloat32( at, little_endian ), 4 ];\r\n\t\t\t\tcase 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction binaryReadElement( dataview, at, properties, little_endian ) {\r\n\r\n\t\t\tconst element = {};\r\n\t\t\tlet result, read = 0;\r\n\r\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\r\n\r\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\r\n\r\n\t\t\t\t\tconst list = [];\r\n\r\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\r\n\t\t\t\t\tconst n = result[ 0 ];\r\n\t\t\t\t\tread += result[ 1 ];\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\r\n\t\t\t\t\t\tlist.push( result[ 0 ] );\r\n\t\t\t\t\t\tread += result[ 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = list;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresult = binaryRead( dataview, at + read, properties[ i ].type, little_endian );\r\n\t\t\t\t\telement[ properties[ i ].name ] = result[ 0 ];\r\n\t\t\t\t\tread += result[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn [ element, read ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBinary( data, header ) {\r\n\r\n\t\t\tconst buffer = createBuffer();\r\n\r\n\t\t\tconst little_endian = ( header.format === 'binary_little_endian' );\r\n\t\t\tconst body = new DataView( data, header.headerLength );\r\n\t\t\tlet result, loc = 0;\r\n\r\n\t\t\tfor ( let currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\r\n\r\n\t\t\t\tfor ( let currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\r\n\r\n\t\t\t\t\tresult = binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\r\n\t\t\t\t\tloc += result[ 1 ];\r\n\t\t\t\t\tconst element = result[ 0 ];\r\n\r\n\t\t\t\t\thandleElement( buffer, header.elements[ currentElement ].name, element );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn postProcess( buffer );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tlet geometry;\r\n\t\tconst scope = this;\r\n\r\n\t\tif ( data instanceof ArrayBuffer ) {\r\n\r\n\t\t\tconst text = LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\t\t\tconst header = parseHeader( text );\r\n\r\n\t\t\tgeometry = header.format === 'ascii' ? parseASCII( text, header ) : parseBinary( data, header );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { PLYLoader };\r\n"],"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Loader","LoaderUtils","Color","_color","PLYLoader","manager","propertyNameMapping","customPropertyMapping","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","mapping","data","parseHeader","patternHeader","headerText","headerLength","result","exec","Blob","size","header","comments","elements","objInfo","lines","split","currentElement","make_ply_element_property","propertValues","property","type","name","countType","itemType","i","length","line","trim","lineValues","lineType","shift","join","format","version","push","undefined","count","parseInt","properties","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","createBuffer","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","Object","keys","customProperty","parseASCII","patternBody","body","currentElementCount","handleElement","postProcess","geometry","setIndex","setAttribute","toNonIndexed","computeBoundingSphere","elementName","findAttrName","names","l","attrX","attrY","attrZ","attrNX","attrNY","attrNZ","attrS","attrT","attrR","attrG","attrB","setRGB","convertSRGBToLinear","r","g","b","elementProperty","vertex_indices","vertex_index","texcoord","binaryRead","dataview","at","little_endian","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","binaryReadElement","read","parseBinary","DataView","loc","ArrayBuffer","decodeText","Uint8Array"],"sourceRoot":""}